<?xml version="1.0" encoding="utf-8"?><pex id="{506a0a76-78e0-44ba-8f74-a8e2123046de}" creationTime="2014-11-27 15:56:28Z" configuration="WindowsFormsApplication1!\Form1!\*" created="2014-11-27 15:56:28Z" pexVersion="0.94.51006.1" xml="D:\WINDOWS 2012\BACK up 11\easy tranlate\easy translator\better gui\WindowsFormsApplication1\bin\Debug\reports\141127.075628.13100.pex\report.per" html="D:\WINDOWS 2012\BACK up 11\easy tranlate\easy translator\better gui\WindowsFormsApplication1\bin\Debug\reports\141127.075628.13100.pex\report.html"><environment commandLine="&quot;C:\Program Files\Microsoft Pex\bin\Microsoft.Pex.exe&quot; &quot;D:\WINDOWS 2012\BACK up 11\easy tranlate\easy translator\better gui\WindowsFormsApplication1\bin\Debug\WindowsFormsApplication1.exe&quot; /membernamefilter:M:Form1_Load! /namespacefilter:WindowsFormsApplication1! /privatemethods /typefilter:Form1! /assemblyresolutiondirectories:&quot;c:\Program Files\Microsoft Visual Studio 10.0\Common7\IDE\PublicAssemblies&quot; /explorationreflectionmode:LazyWizard /instrumentedassemblies:System.Deployment;System.Drawing;System.Windows.Forms /x64failsilently /clrversion:v4.0.30319 /donotopenreport /reportlevel:Xml /reportrootpath:&quot;D:\WINDOWS 2012\BACK up 11\easy tranlate\easy translator\better gui\WindowsFormsApplication1\bin\Debug\reports&quot; /testassemblyname:WindowsFormsApplication1.Tests /testframework:VisualStudioUnitTest /testlanguage:cs /testprojectfile:&quot;D:\WINDOWS 2012\BACK up 11\easy tranlate\easy translator\better gui\WindowsFormsApplication1\WindowsFormsApplication1.csproj&quot; /testprojectnotupdate /testprojectskip" machineName="HAMID-PC" osVersion="Microsoft Windows NT 6.1.7600.0" processorCount="1" clrVersion="4.0.30319.17929" bitness="x86" user="hamid"><envVars><envVar name="HOMEPATH" value="\Users\hamid"/>
<envVar name="COMPUTERNAME" value="HAMID-PC"/>
<envVar name="CLRMONITOR_INJECT_TYPES" value=""/>
<envVar name="CLRMONITOR_INSTRUMENT_TYPES_EXCLUSIONS" value=""/>
<envVar name="TMP" value="C:\Users\hamid\AppData\Local\Temp"/>
<envVar name="PROCESSOR_REVISION" value="7c02"/>
<envVar name="PROCESSOR_IDENTIFIER" value="x86 Family 15 Model 124 Stepping 2, AuthenticAMD"/>
<envVar name="PATHEXT" value=".COM;.EXE;.BAT;.CMD;.VBS;.VBE;.JS;.JSE;.WSF;.WSH;.MSC"/>
<envVar name="VS100COMNTOOLS" value="C:\Program Files\Microsoft Visual Studio 10.0\Common7\Tools\"/>
<envVar name="COMPLUS_DEFAULTVERSION" value="v4.0.30319"/>
<envVar name="CLRMONITOR_CLSID" value="{21bbb412-71ac-41f9-a377-48529a4859cf}"/>
<envVar name="SystemDrive" value="C:"/>
<envVar name="PROCESSOR_LEVEL" value="15"/>
<envVar name="TEMP" value="C:\Users\hamid\AppData\Local\Temp"/>
<envVar name="LOCALAPPDATA" value="C:\Users\hamid\AppData\Local"/>
<envVar name="PUBLIC" value="C:\Users\Public"/>
<envVar name="CLRMONITOR_PROTECT_ALL_CCTORS" value="1"/>
<envVar name="CLRMONITOR_PROTECT_TYPES" value="Microsoft.FSharp.Text.Printf,Microsoft.FSharp.Text.PrintfImpl"/>
<envVar name="VSPID" value="5584"/>
<envVar name="CLRMONITOR_INITIALIZED" value="0xc"/>
<envVar name="USERDOMAIN" value="hamid-PC"/>
<envVar name="ComSpec" value="C:\Windows\system32\cmd.exe"/>
<envVar name="CLRMONITOR_ERASE_FINALIZER_TYPES" value=""/>
<envVar name="CLRMONITOR_INJECT_NAMESPACES" value=""/>
<envVar name="NUMBER_OF_PROCESSORS" value="1"/>
<envVar name="CommonProgramFiles" value="C:\Program Files\Common Files"/>
<envVar name="PSModulePath" value="C:\Windows\system32\WindowsPowerShell\v1.0\Modules\"/>
<envVar name="CLRMONITOR_INSTRUMENT_NAMESPACES_EXCLUSIONS" value=""/>
<envVar name="CLRMONITOR_FLAGS" value=""/>
<envVar name="VisualStudioDir" value="C:\Users\hamid\Documents\Visual Studio 2010"/>
<envVar name="pex_instrumentation" value="1"/>
<envVar name="CLRMONITOR_INSTRUMENT_TYPES" value="System.Array,System.Array+ArrayEnumerator,System.Array+FunctorComparer`1,System.Array+SZArrayEnumerator,System.Array+SorterGenericArray,System.Array+SorterObjectArray,System.Boolean,System.Byte,System.Char,System.CharEnumerator,System.ComponentModel.Component,System.ComponentModel.Container,System.ComponentModel.Container+Site,System.Convert,System.Currency,System.DateTime,System.Decimal,System.Diagnostics.Assert,System.Double,System.Globalization.CharUnicodeInfo,System.Globalization.CultureTableRecord,System.Globalization.TextInfo,System.Guid,System.IO.MemoryStream,System.IO.Stream,System.IO.StreamReader,System.IO.StreamWriter,System.IO.StringReader,System.IO.StringWriter,System.Int16,System.Int32,System.Int64,System.Lazy`1,System.Lazy`1+Boxed,System.Lazy`1+LazyInternalExceptionHolder,System.Math,System.Nullable,System.Nullable`1,System.OrdinalComparer,System.SByte,System.SZArrayHelper,System.SZArrayHelper+SZGenericArrayEnumerator`1,System.Single,System.String,System.StringComparer,System.Text.ASCIIEncoding,System.Text.DecoderNLS,System.Text.Encoding,System.Text.UTF8Encoding,System.TimeSpan,System.Tuple,System.Tuple`1,System.Tuple`2,System.Tuple`3,System.Tuple`4,System.Tuple`5,System.Tuple`6,System.Tuple`7,System.Tuple`8,System.UInt16,System.UInt32,System.UInt64,System.Xml.XmlTextWriter,System.Xml.XmlTextWriter+Namespace,System.Xml.XmlTextWriter+NamespaceState,System.Xml.XmlTextWriter+SpecialAttr,System.Xml.XmlTextWriter+State,System.Xml.XmlTextWriter+TagInfo,System.Xml.XmlTextWriter+Token,System.Xml.XmlWriter,System.Xml.XmlWriter+&lt;WriteAttributeStringAsyncHelper&gt;d__0,System.Xml.XmlWriter+&lt;WriteAttributesAsync&gt;d__7,System.Xml.XmlWriter+&lt;WriteElementStringAsync&gt;d__20,System.Xml.XmlWriter+&lt;WriteLocalNamespacesAsync&gt;d__23,System.Xml.XmlWriter+&lt;WriteNodeAsync&gt;d__19,System.Xml.XmlWriter+&lt;WriteNodeAsync_CallAsyncReader&gt;d__10,System.Xml.XmlWriter+&lt;WriteNodeAsync_CallSyncReader&gt;d__a,System.Xml.XmlWriter+&lt;WriteQualifiedNameAsync&gt;d__3,__Box`1,__SzArrayHelper`1"/>
<envVar name="ProgramData" value="C:\ProgramData"/>
<envVar name="ProgramFiles" value="C:\Program Files"/>
<envVar name="CLRMONITOR_ERASE_CCTOR_TYPES" value=""/>
<envVar name="FP_NO_HOST_CHECK" value="NO"/>
<envVar name="pex_clientid" value="pex5584_1"/>
<envVar name="windir" value="C:\Windows"/>
<envVar name="SystemRoot" value="C:\Windows"/>
<envVar name="CLRMONITOR_INSTRUMENT_ATTRIBUTE" value="Microsoft.Moles.Framework.Moles.MolesInstrumentAttribute"/>
<envVar name="COMPLUS_ProfAPI_ProfilerCompatibilitySetting" value="EnableV2Profiler"/>
<envVar name="pex_server_channel" value="pex5584"/>
<envVar name="LOGONSERVER" value="\\HAMID-PC"/>
<envVar name="USERPROFILE" value="C:\Users\hamid"/>
<envVar name="CLRMONITOR_SUBSTITUTIONS" value="C:\Windows\assembly\GAC_MSIL\Microsoft.ExtendedReflection\0.94.0.0__31bf3856ad364e35\Microsoft.ExtendedReflection.dll"/>
<envVar name="APPDATA" value="C:\Users\hamid\AppData\Roaming"/>
<envVar name="HOMEDRIVE" value="C:"/>
<envVar name="CLRMONITOR_INJECT_ASSEMBLIES" value=""/>
<envVar name="CodeContractsInstallDir" value="C:\Program Files\Microsoft\Contracts\"/>
<envVar name="USERNAME" value="hamid"/>
<envVar name="COR_PROFILER" value="{21bbb412-71ac-41f9-a377-48529a4859cf}"/>
<envVar name="PROCESSOR_ARCHITECTURE" value="x86"/>
<envVar name="CLRMONITOR_INSTRUMENT_ASSEMBLIES_EXCLUSIONS" value=""/>
<envVar name="OS" value="Windows_NT"/>
<envVar name="CLRMONITOR_INSTRUMENT_NAMESPACES" value="System.Collections,System.Collections.Generic,System.Collections.ObjectModel,System.Collections.Specialized,System.Diagnostics.Contracts"/>
<envVar name="__COMPAT_LAYER" value="RunAsAdmin"/>
<envVar name="Path" value="C:\Program Files\Common Files\Microsoft Shared\Windows Live;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\Common Files\Microsoft Shared\Windows Live"/>
<envVar name="CLRMONITOR_INSTRUMENT_ASSEMBLIES" value="FSharp.Core,FSharp.PowerPack,Microsoft.Contracts,Microsoft.VisualBasic,Microsoft.VisualStudio.QualityTools.UnitTestFramework,System,System.Core,System.Deployment,System.Drawing,System.Web,System.Windows.Forms,WindowsFormsApplication1,WindowsFormsApplication1.Tests"/>
<envVar name="ALLUSERSPROFILE" value="C:\ProgramData"/>
</envVars>
</environment>
<settings/>
<reflection/>
<assembly name="WindowsFormsApplication1" version="1.0.0.0" fileVersion="1.0.0.0" fullName="WindowsFormsApplication1, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" location="D:\WINDOWS 2012\BACK up 11\easy tranlate\easy translator\better gui\WindowsFormsApplication1\bin\Debug\WindowsFormsApplication1.exe" fileName="WindowsFormsApplication1.exe"><settings testFramework="VisualStudioUnitTest" testLanguage="cs"/>
<fixture name="Form1Test" type="WindowsFormsApplication1.Form1Test" typeName="Form1Test" token="2000002" href="fix\WindowsFormsApplication1.Tests.575.html"><type spec="Class"><definition assemblyName="WindowsFormsApplication1.Tests" name="Form1Test" token="2000002" namespace="WindowsFormsApplication1"/>
</type>
<settings typeUnderTest="WindowsFormsApplication1.Form1"/>
<exploration shortName="Form1_Load(Form1, Object, EventArgs)" fullName="WindowsFormsApplication1.Form1Test.Form1_Load(Form1, Object, EventArgs)" isDynamicCode="true"><target><methodDefinition assemblyName="WindowsFormsApplication1" name="Form1_Load" token="6000006"><declaringType assemblyName="WindowsFormsApplication1" name="Form1" token="2000004" namespace="WindowsFormsApplication1"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="WindowsFormsApplication1" name="Form1" token="2000004" namespace="WindowsFormsApplication1"/>
</type>
</parameter>
<parameter name="sender" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="Object" token="2000002" namespace="System"/>
</type>
</parameter>
<parameter name="e" position="2"><type spec="Class"><definition assemblyName="mscorlib" name="EventArgs" token="2000070" namespace="System"/>
</type>
</parameter>
</methodDefinition>
</target>
<explorable title="guessed how to create WindowsFormsApplication1.Form1" kind="guessedclass" isExplorableTypeExported="true"><explorableType spec="Class"><definition assemblyName="WindowsFormsApplication1" name="Form1" token="2000004" namespace="WindowsFormsApplication1"/>
</explorableType>
<testAssemblyName name="WindowsFormsApplication1.Tests"/>
<update kind="CollectionCodeUpdate" name="Accept/Edit Factory"><codeUpdate kind="AddTypeCodeUpdate" name="Add type" fileNameHint="Factories\Form1Factory" abstract="true" sealed="true" visibility="Public"><doc><![CDATA[<summary>A factory for WindowsFormsApplication1.Form1 instances</summary>
]]></doc>
<reference name="mscorlib"/>
<reference name="Microsoft.Pex.Framework"/>
<reference name="WindowsFormsApplication1" location="D:\WINDOWS 2012\BACK up 11\easy tranlate\easy translator\better gui\WindowsFormsApplication1\bin\Debug\WindowsFormsApplication1.exe"/>
<reference name="System.Windows.Forms"/>
<reference name="System.Drawing"/>
<reference name="System"/>
<typeDefinition assemblyName="WindowsFormsApplication1.Tests" name="Form1Factory" token="ffffffff" namespace="WindowsFormsApplication1"/>
<baseType spec="Class"><definition assemblyName="mscorlib" name="Object" token="2000002" namespace="System"/>
</baseType>
<target><assembly name="WindowsFormsApplication1.Tests"/>
</target>
</codeUpdate>
<codeUpdate kind="AddMethodCodeUpdate" name="Add method" visibility="Public"><attribute><ctor><definition assemblyName="Microsoft.Pex.Framework" name=".ctor" token="6000e46"><declaringType assemblyName="Microsoft.Pex.Framework" name="PexFactoryMethodAttribute" token="200027d" namespace="Microsoft.Pex.Framework"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="Microsoft.Pex.Framework" name="PexFactoryMethodAttribute" token="200027d" namespace="Microsoft.Pex.Framework"/>
</type>
</parameter>
<parameter name="factoredType" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="Type" token="2000128" namespace="System"/>
</type>
</parameter>
</definition>
</ctor>
<ctorArgument><value kind="TypeOfExpression"><type spec="Class"><definition assemblyName="WindowsFormsApplication1" name="Form1" token="2000004" namespace="WindowsFormsApplication1"/>
</type>
</value>
</ctorArgument>
</attribute>
<doc><![CDATA[<summary>A factory for WindowsFormsApplication1.Form1 instances</summary>
]]></doc>
<reference name="WindowsFormsApplication1" location="D:\WINDOWS 2012\BACK up 11\easy tranlate\easy translator\better gui\WindowsFormsApplication1\bin\Debug\WindowsFormsApplication1.exe"/>
<reference name="System.Windows.Forms"/>
<reference name="System"/>
<reference name="mscorlib"/>
<reference name="System.Drawing"/>
<methodDefinition assemblyName="WindowsFormsApplication1.Tests" name="Create" static="true"><declaringType assemblyName="WindowsFormsApplication1.Tests" name="Form1Factory" token="ffffffff" namespace="WindowsFormsApplication1"/>
<parameter name="value_i" position="0"><type spec="ValueType"><definition assemblyName="System.Windows.Forms" valueType="true" name="AutoValidate" token="200006f" namespace="System.Windows.Forms"/>
</type>
</parameter>
<parameter name="value_i1_" position="1"><type spec="ValueType"><definition assemblyName="System.Windows.Forms" valueType="true" name="FormBorderStyle" token="20001fa" namespace="System.Windows.Forms"/>
</type>
</parameter>
<parameter name="value_i2_" position="2"><type spec="ValueType"><definition assemblyName="System.Windows.Forms" valueType="true" name="DialogResult" token="20001bd" namespace="System.Windows.Forms"/>
</type>
</parameter>
<parameter name="value_icon" position="3"><type spec="Class"><definition assemblyName="System.Drawing" name="Icon" token="2000021" namespace="System.Drawing"/>
</type>
</parameter>
<parameter name="value_form" position="4"><type spec="Class"><definition assemblyName="System.Windows.Forms" name="Form" token="20001f8" namespace="System.Windows.Forms"/>
</type>
</parameter>
<parameter name="value_b" position="5"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Boolean" token="200009e" namespace="System"/>
</type>
</parameter>
<parameter name="value_i3_" position="6"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Int32" token="20000f3" namespace="System"/>
</type>
</parameter>
<parameter name="value_control" position="7"><type spec="Class"><definition assemblyName="System.Windows.Forms" name="Control" token="2000057" namespace="System.Windows.Forms"/>
</type>
</parameter>
<parameter name="value_point" position="8"><type spec="ValueType"><definition assemblyName="System.Drawing" valueType="true" name="Point" token="200002a" namespace="System.Drawing"/>
</type>
</parameter>
<parameter name="value_iSite" position="9"><type spec="Class"><definition assemblyName="System" name="ISite" token="20000b4" namespace="System.ComponentModel"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="WindowsFormsApplication1" name="Form1" token="2000004" namespace="WindowsFormsApplication1"/>
</resultType>
</methodDefinition>
<target><typeDefinition assemblyName="WindowsFormsApplication1.Tests" name="Form1Factory" token="ffffffff" namespace="WindowsFormsApplication1"/>
</target>
</codeUpdate>
<codeUpdate kind="SelectCodeUpdate" name="Select" selectKind="Body"><target><methodDefinition assemblyName="WindowsFormsApplication1.Tests" name="Create" static="true"><declaringType assemblyName="WindowsFormsApplication1.Tests" name="Form1Factory" token="ffffffff" namespace="WindowsFormsApplication1"/>
<parameter name="value_i" position="0"><type spec="ValueType"><definition assemblyName="System.Windows.Forms" valueType="true" name="AutoValidate" token="200006f" namespace="System.Windows.Forms"/>
</type>
</parameter>
<parameter name="value_i1_" position="1"><type spec="ValueType"><definition assemblyName="System.Windows.Forms" valueType="true" name="FormBorderStyle" token="20001fa" namespace="System.Windows.Forms"/>
</type>
</parameter>
<parameter name="value_i2_" position="2"><type spec="ValueType"><definition assemblyName="System.Windows.Forms" valueType="true" name="DialogResult" token="20001bd" namespace="System.Windows.Forms"/>
</type>
</parameter>
<parameter name="value_icon" position="3"><type spec="Class"><definition assemblyName="System.Drawing" name="Icon" token="2000021" namespace="System.Drawing"/>
</type>
</parameter>
<parameter name="value_form" position="4"><type spec="Class"><definition assemblyName="System.Windows.Forms" name="Form" token="20001f8" namespace="System.Windows.Forms"/>
</type>
</parameter>
<parameter name="value_b" position="5"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Boolean" token="200009e" namespace="System"/>
</type>
</parameter>
<parameter name="value_i3_" position="6"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Int32" token="20000f3" namespace="System"/>
</type>
</parameter>
<parameter name="value_control" position="7"><type spec="Class"><definition assemblyName="System.Windows.Forms" name="Control" token="2000057" namespace="System.Windows.Forms"/>
</type>
</parameter>
<parameter name="value_point" position="8"><type spec="ValueType"><definition assemblyName="System.Drawing" valueType="true" name="Point" token="200002a" namespace="System.Drawing"/>
</type>
</parameter>
<parameter name="value_iSite" position="9"><type spec="Class"><definition assemblyName="System" name="ISite" token="20000b4" namespace="System.ComponentModel"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="WindowsFormsApplication1" name="Form1" token="2000004" namespace="WindowsFormsApplication1"/>
</resultType>
</methodDefinition>
</target>
</codeUpdate>
</update>
</explorable>
<log level="warning" time="2014-11-27 15:56:46Z" wikiTopic="Usable Type Guessed" category="domains" message="will use System.Windows.Forms.Control+AxSourcingSite as ISite"><codeUpdate kind="AddOrUpdateAttributeCodeUpdate" name="Add [PexUseType]" fileNameHint="PexAssemblyInfo"><attributeCtor><definition assemblyName="Microsoft.Pex.Framework" name=".ctor" token="6000b68"><declaringType assemblyName="Microsoft.Pex.Framework" name="PexUseTypeAttribute" token="200023e" namespace="Microsoft.Pex.Framework.Using"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="Microsoft.Pex.Framework" name="PexUseTypeAttribute" token="200023e" namespace="Microsoft.Pex.Framework.Using"/>
</type>
</parameter>
<parameter name="typeOfAssembly" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="Type" token="2000128" namespace="System"/>
</type>
</parameter>
<parameter name="fullTypeName" position="2"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004c" namespace="System"/>
</type>
</parameter>
</definition>
</attributeCtor>
<argument><value kind="TypeOfExpression"><typeDefinition assemblyName="System.Windows.Forms" valueType="true" name="Day" token="20001bc" namespace="System.Windows.Forms"/>
</value>
</argument>
<argument><value kind="StringExpression">System.Windows.Forms.Control+AxSourcingSite</value>
</argument>
<target><assembly name="WindowsFormsApplication1.Tests"/>
</target>
</codeUpdate>
</log>
<log level="warning" time="2014-11-27 15:56:46Z" wikiTopic="Usable Type Guessed" category="domains" message="will use System.Windows.Forms.ToolStripControlHost+StubSite as ISite"><codeUpdate kind="AddOrUpdateAttributeCodeUpdate" name="Add [PexUseType]" fileNameHint="PexAssemblyInfo"><attributeCtor><definition assemblyName="Microsoft.Pex.Framework" name=".ctor" token="6000b68"><declaringType assemblyName="Microsoft.Pex.Framework" name="PexUseTypeAttribute" token="200023e" namespace="Microsoft.Pex.Framework.Using"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="Microsoft.Pex.Framework" name="PexUseTypeAttribute" token="200023e" namespace="Microsoft.Pex.Framework.Using"/>
</type>
</parameter>
<parameter name="typeOfAssembly" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="Type" token="2000128" namespace="System"/>
</type>
</parameter>
<parameter name="fullTypeName" position="2"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004c" namespace="System"/>
</type>
</parameter>
</definition>
</attributeCtor>
<argument><value kind="TypeOfExpression"><typeDefinition assemblyName="System.Windows.Forms" valueType="true" name="Day" token="20001bc" namespace="System.Windows.Forms"/>
</value>
</argument>
<argument><value kind="StringExpression">System.Windows.Forms.ToolStripControlHost+StubSite</value>
</argument>
<target><assembly name="WindowsFormsApplication1.Tests"/>
</target>
</codeUpdate>
</log>
<log level="warning" time="2014-11-27 15:56:46Z" wikiTopic="Usable Type Guessed" category="domains" message="will use System.ComponentModel.Container+Site as ISite"><codeUpdate kind="AddOrUpdateAttributeCodeUpdate" name="Add [PexUseType]" fileNameHint="PexAssemblyInfo"><attributeCtor><definition assemblyName="Microsoft.Pex.Framework" name=".ctor" token="6000b68"><declaringType assemblyName="Microsoft.Pex.Framework" name="PexUseTypeAttribute" token="200023e" namespace="Microsoft.Pex.Framework.Using"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="Microsoft.Pex.Framework" name="PexUseTypeAttribute" token="200023e" namespace="Microsoft.Pex.Framework.Using"/>
</type>
</parameter>
<parameter name="typeOfAssembly" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="Type" token="2000128" namespace="System"/>
</type>
</parameter>
<parameter name="fullTypeName" position="2"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004c" namespace="System"/>
</type>
</parameter>
</definition>
</attributeCtor>
<argument><value kind="TypeOfExpression"><typeDefinition assemblyName="System" name="Uri" token="2000374" namespace="System"/>
</value>
</argument>
<argument><value kind="StringExpression">System.ComponentModel.Container+Site</value>
</argument>
<target><assembly name="WindowsFormsApplication1.Tests"/>
</target>
</codeUpdate>
</log>
<log level="warning" time="2014-11-27 15:56:46Z" wikiTopic="Usable Type Guessed" category="domains" message="will use System.ComponentModel.NestedContainer+Site as ISite"><codeUpdate kind="AddOrUpdateAttributeCodeUpdate" name="Add [PexUseType]" fileNameHint="PexAssemblyInfo"><attributeCtor><definition assemblyName="Microsoft.Pex.Framework" name=".ctor" token="6000b68"><declaringType assemblyName="Microsoft.Pex.Framework" name="PexUseTypeAttribute" token="200023e" namespace="Microsoft.Pex.Framework.Using"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="Microsoft.Pex.Framework" name="PexUseTypeAttribute" token="200023e" namespace="Microsoft.Pex.Framework.Using"/>
</type>
</parameter>
<parameter name="typeOfAssembly" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="Type" token="2000128" namespace="System"/>
</type>
</parameter>
<parameter name="fullTypeName" position="2"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004c" namespace="System"/>
</type>
</parameter>
</definition>
</attributeCtor>
<argument><value kind="TypeOfExpression"><typeDefinition assemblyName="System" name="Uri" token="2000374" namespace="System"/>
</value>
</argument>
<argument><value kind="StringExpression">System.ComponentModel.NestedContainer+Site</value>
</argument>
<target><assembly name="WindowsFormsApplication1.Tests"/>
</target>
</codeUpdate>
</log>
<log level="message" time="2014-11-27 15:56:48Z" category="symbols" message="could not load symbols for C:\Windows\Microsoft.Net\assembly\GAC_MSIL\System.Windows.Forms\v4.0_4.0.0.0__b77a5c561934e089\System.Windows.Forms.dll"/>
<log level="message" time="2014-11-27 15:56:48Z" category="symbols" message="search path: ;"/>
<log level="message" time="2014-11-27 15:56:48Z" category="symbols" message="could not load symbols for C:\Windows\Microsoft.NET\Framework\v4.0.30319\mscorlib.dll"/>
<uninstrumented extern="true" methodDisplayName="System.Int32 System.Windows.Forms.UnsafeNativeMethods.GetSystemMetrics(System.Int32 nIndex)" declaringTypeDisplayName="System.Windows.Forms.UnsafeNativeMethods" methodShortDisplayName="UnsafeNativeMethods.GetSystemMetrics(Int32)" wikiTopic="External Method Called"/>
<staticFieldStore fieldDisplayName="System.Windows.Forms.SystemInformation.nativeMouseWheelSupport" declaringTypeDisplayName="System.Windows.Forms.SystemInformation" fieldShortDisplayName="nativeMouseWheelSupport" wikiTopic="Value Stored In Static Field"><field><definition assemblyName="System.Windows.Forms" name="nativeMouseWheelSupport" static="true" token="4001ed6"><declaringType assemblyName="System.Windows.Forms" name="SystemInformation" token="2000336" namespace="System.Windows.Forms"/>
<fieldType spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Boolean" token="200009e" namespace="System"/>
</fieldType>
</definition>
</field>
<stackTrace><frame value="  at SystemInformation.get_NativeMouseWheelSupport()" method="SystemInformation.get_NativeMouseWheelSupport()" offset="20"/>
<frame value="  at Control.InitMouseWheelSupport()" method="Control.InitMouseWheelSupport()" offset="7"/>
<frame value="  at Control..ctor(Boolean)" method="Control..ctor(Boolean)" offset="82"/>
<frame value="  at Control..ctor()" method="Control..ctor()" offset="2"/>
<frame value="  at ScrollableControl..ctor()" method="ScrollableControl..ctor()" offset="56"/>
<frame value="  at ContainerControl..ctor()" method="ContainerControl..ctor()" offset="49"/>
<frame value="  at Form..ctor()" method="Form..ctor()" offset="81"/>
<frame value="  at Form1..ctor() in D:\WINDOWS 2012\BACK up 11\easy tranlate\easy translator\better gui\WindowsFormsApplication1\Form1.cs(26)" method="Form1..ctor()" offset="19" file="D:\WINDOWS 2012\BACK up 11\easy tranlate\easy translator\better gui\WindowsFormsApplication1\Form1.cs" line="26"><beforeSource><![CDATA[
       
]]></beforeSource>
<source><![CDATA[        public Form1()]]></source>
<afterSource><![CDATA[        {
            InitializeComponent();
        }]]></afterSource>
</frame>
<frame value="  at Form1Factory.Create(AutoValidate, FormBorderStyle, DialogResult, Icon, Form, Boolean, Int32, Control, Point, ISite)" method="Form1Factory.Create(AutoValidate, FormBorderStyle, DialogResult, Icon, Form, Boolean, Int32, Control, Point, ISite)" offset="0"/>
<frame value="  at ThreadHelper.ThreadStart_Context(Object)" method="ThreadHelper.ThreadStart_Context(Object)" offset="59"/>
<frame value="  at ExecutionContext.RunInternal(ExecutionContext, ContextCallback, Object, Boolean)" method="ExecutionContext.RunInternal(ExecutionContext, ContextCallback, Object, Boolean)" offset="112"/>
<frame value="  at ExecutionContext.Run(ExecutionContext, ContextCallback, Object, Boolean)" method="ExecutionContext.Run(ExecutionContext, ContextCallback, Object, Boolean)" offset="9"/>
<frame value="  at ExecutionContext.Run(ExecutionContext, ContextCallback, Object)" method="ExecutionContext.Run(ExecutionContext, ContextCallback, Object)" offset="52"/>
<frame value="  at ThreadHelper.ThreadStart(Object)" method="ThreadHelper.ThreadStart(Object)" offset="50"/>
</stackTrace>
</staticFieldStore>
<staticFieldStore fieldDisplayName="System.Windows.Forms.SystemInformation.checkNativeMouseWheelSupport" declaringTypeDisplayName="System.Windows.Forms.SystemInformation" fieldShortDisplayName="checkNativeMouseWheelSupport" wikiTopic="Value Stored In Static Field"><field><definition assemblyName="System.Windows.Forms" name="checkNativeMouseWheelSupport" static="true" token="4001ed5"><declaringType assemblyName="System.Windows.Forms" name="SystemInformation" token="2000336" namespace="System.Windows.Forms"/>
<fieldType spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Boolean" token="200009e" namespace="System"/>
</fieldType>
</definition>
</field>
<stackTrace><frame value="  at SystemInformation.get_NativeMouseWheelSupport()" method="SystemInformation.get_NativeMouseWheelSupport()" offset="26"/>
<frame value="  at Control.InitMouseWheelSupport()" method="Control.InitMouseWheelSupport()" offset="7"/>
<frame value="  at Control..ctor(Boolean)" method="Control..ctor(Boolean)" offset="82"/>
<frame value="  at Control..ctor()" method="Control..ctor()" offset="2"/>
<frame value="  at ScrollableControl..ctor()" method="ScrollableControl..ctor()" offset="56"/>
<frame value="  at ContainerControl..ctor()" method="ContainerControl..ctor()" offset="49"/>
<frame value="  at Form..ctor()" method="Form..ctor()" offset="81"/>
<frame value="  at Form1..ctor() in D:\WINDOWS 2012\BACK up 11\easy tranlate\easy translator\better gui\WindowsFormsApplication1\Form1.cs(26)" method="Form1..ctor()" offset="19" file="D:\WINDOWS 2012\BACK up 11\easy tranlate\easy translator\better gui\WindowsFormsApplication1\Form1.cs" line="26"><beforeSource><![CDATA[
       
]]></beforeSource>
<source><![CDATA[        public Form1()]]></source>
<afterSource><![CDATA[        {
            InitializeComponent();
        }]]></afterSource>
</frame>
<frame value="  at Form1Factory.Create(AutoValidate, FormBorderStyle, DialogResult, Icon, Form, Boolean, Int32, Control, Point, ISite)" method="Form1Factory.Create(AutoValidate, FormBorderStyle, DialogResult, Icon, Form, Boolean, Int32, Control, Point, ISite)" offset="0"/>
<frame value="  at ThreadHelper.ThreadStart_Context(Object)" method="ThreadHelper.ThreadStart_Context(Object)" offset="59"/>
<frame value="  at ExecutionContext.RunInternal(ExecutionContext, ContextCallback, Object, Boolean)" method="ExecutionContext.RunInternal(ExecutionContext, ContextCallback, Object, Boolean)" offset="112"/>
<frame value="  at ExecutionContext.Run(ExecutionContext, ContextCallback, Object, Boolean)" method="ExecutionContext.Run(ExecutionContext, ContextCallback, Object, Boolean)" offset="9"/>
<frame value="  at ExecutionContext.Run(ExecutionContext, ContextCallback, Object)" method="ExecutionContext.Run(ExecutionContext, ContextCallback, Object)" offset="52"/>
<frame value="  at ThreadHelper.ThreadStart(Object)" method="ThreadHelper.ThreadStart(Object)" offset="50"/>
</stackTrace>
</staticFieldStore>
<staticFieldStore fieldDisplayName="System.Windows.Forms.Control.mouseWheelRoutingNeeded" declaringTypeDisplayName="System.Windows.Forms.Control" fieldShortDisplayName="mouseWheelRoutingNeeded" wikiTopic="Value Stored In Static Field"><field><definition assemblyName="System.Windows.Forms" name="mouseWheelRoutingNeeded" static="true" token="4000186"><declaringType assemblyName="System.Windows.Forms" name="Control" token="2000057" namespace="System.Windows.Forms"/>
<fieldType spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Boolean" token="200009e" namespace="System"/>
</fieldType>
</definition>
</field>
<stackTrace><frame value="  at Control.InitMouseWheelSupport()" method="Control.InitMouseWheelSupport()" offset="15"/>
<frame value="  at Control..ctor(Boolean)" method="Control..ctor(Boolean)" offset="82"/>
<frame value="  at Control..ctor()" method="Control..ctor()" offset="2"/>
<frame value="  at ScrollableControl..ctor()" method="ScrollableControl..ctor()" offset="56"/>
<frame value="  at ContainerControl..ctor()" method="ContainerControl..ctor()" offset="49"/>
<frame value="  at Form..ctor()" method="Form..ctor()" offset="81"/>
<frame value="  at Form1..ctor() in D:\WINDOWS 2012\BACK up 11\easy tranlate\easy translator\better gui\WindowsFormsApplication1\Form1.cs(26)" method="Form1..ctor()" offset="19" file="D:\WINDOWS 2012\BACK up 11\easy tranlate\easy translator\better gui\WindowsFormsApplication1\Form1.cs" line="26"><beforeSource><![CDATA[
       
]]></beforeSource>
<source><![CDATA[        public Form1()]]></source>
<afterSource><![CDATA[        {
            InitializeComponent();
        }]]></afterSource>
</frame>
<frame value="  at Form1Factory.Create(AutoValidate, FormBorderStyle, DialogResult, Icon, Form, Boolean, Int32, Control, Point, ISite)" method="Form1Factory.Create(AutoValidate, FormBorderStyle, DialogResult, Icon, Form, Boolean, Int32, Control, Point, ISite)" offset="0"/>
<frame value="  at ThreadHelper.ThreadStart_Context(Object)" method="ThreadHelper.ThreadStart_Context(Object)" offset="59"/>
<frame value="  at ExecutionContext.RunInternal(ExecutionContext, ContextCallback, Object, Boolean)" method="ExecutionContext.RunInternal(ExecutionContext, ContextCallback, Object, Boolean)" offset="112"/>
<frame value="  at ExecutionContext.Run(ExecutionContext, ContextCallback, Object, Boolean)" method="ExecutionContext.Run(ExecutionContext, ContextCallback, Object, Boolean)" offset="9"/>
<frame value="  at ExecutionContext.Run(ExecutionContext, ContextCallback, Object)" method="ExecutionContext.Run(ExecutionContext, ContextCallback, Object)" offset="52"/>
<frame value="  at ThreadHelper.ThreadStart(Object)" method="ThreadHelper.ThreadStart(Object)" offset="50"/>
</stackTrace>
</staticFieldStore>
<staticFieldStore fieldDisplayName="System.Windows.Forms.Control.mouseWheelInit" declaringTypeDisplayName="System.Windows.Forms.Control" fieldShortDisplayName="mouseWheelInit" wikiTopic="Value Stored In Static Field"><field><definition assemblyName="System.Windows.Forms" name="mouseWheelInit" static="true" token="4000187"><declaringType assemblyName="System.Windows.Forms" name="Control" token="2000057" namespace="System.Windows.Forms"/>
<fieldType spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Boolean" token="200009e" namespace="System"/>
</fieldType>
</definition>
</field>
<stackTrace><frame value="  at Control.InitMouseWheelSupport()" method="Control.InitMouseWheelSupport()" offset="83"/>
<frame value="  at Control..ctor(Boolean)" method="Control..ctor(Boolean)" offset="82"/>
<frame value="  at Control..ctor()" method="Control..ctor()" offset="2"/>
<frame value="  at ScrollableControl..ctor()" method="ScrollableControl..ctor()" offset="56"/>
<frame value="  at ContainerControl..ctor()" method="ContainerControl..ctor()" offset="49"/>
<frame value="  at Form..ctor()" method="Form..ctor()" offset="81"/>
<frame value="  at Form1..ctor() in D:\WINDOWS 2012\BACK up 11\easy tranlate\easy translator\better gui\WindowsFormsApplication1\Form1.cs(26)" method="Form1..ctor()" offset="19" file="D:\WINDOWS 2012\BACK up 11\easy tranlate\easy translator\better gui\WindowsFormsApplication1\Form1.cs" line="26"><beforeSource><![CDATA[
       
]]></beforeSource>
<source><![CDATA[        public Form1()]]></source>
<afterSource><![CDATA[        {
            InitializeComponent();
        }]]></afterSource>
</frame>
<frame value="  at Form1Factory.Create(AutoValidate, FormBorderStyle, DialogResult, Icon, Form, Boolean, Int32, Control, Point, ISite)" method="Form1Factory.Create(AutoValidate, FormBorderStyle, DialogResult, Icon, Form, Boolean, Int32, Control, Point, ISite)" offset="0"/>
<frame value="  at ThreadHelper.ThreadStart_Context(Object)" method="ThreadHelper.ThreadStart_Context(Object)" offset="59"/>
<frame value="  at ExecutionContext.RunInternal(ExecutionContext, ContextCallback, Object, Boolean)" method="ExecutionContext.RunInternal(ExecutionContext, ContextCallback, Object, Boolean)" offset="112"/>
<frame value="  at ExecutionContext.Run(ExecutionContext, ContextCallback, Object, Boolean)" method="ExecutionContext.Run(ExecutionContext, ContextCallback, Object, Boolean)" offset="9"/>
<frame value="  at ExecutionContext.Run(ExecutionContext, ContextCallback, Object)" method="ExecutionContext.Run(ExecutionContext, ContextCallback, Object)" offset="52"/>
<frame value="  at ThreadHelper.ThreadStart(Object)" method="ThreadHelper.ThreadStart(Object)" offset="50"/>
</stackTrace>
</staticFieldStore>
<uninstrumented extern="true" methodDisplayName="System.IntPtr System.Windows.Forms.UnsafeNativeMethods.GetModuleHandle(System.String modName)" declaringTypeDisplayName="System.Windows.Forms.UnsafeNativeMethods" methodShortDisplayName="UnsafeNativeMethods.GetModuleHandle(String)" wikiTopic="External Method Called"/>
<uninstrumented extern="true" methodDisplayName="System.IntPtr System.Windows.Forms.UnsafeNativeMethods.LoadLibrary(System.String libname)" declaringTypeDisplayName="System.Windows.Forms.UnsafeNativeMethods" methodShortDisplayName="UnsafeNativeMethods.LoadLibrary(String)" wikiTopic="External Method Called"/>
<staticFieldStore fieldDisplayName="System.Windows.Forms.IntSecurity.allWindows" declaringTypeDisplayName="System.Windows.Forms.IntSecurity" fieldShortDisplayName="allWindows" wikiTopic="Value Stored In Static Field"><field><definition assemblyName="System.Windows.Forms" name="allWindows" static="true" token="40037fd"><declaringType assemblyName="System.Windows.Forms" name="IntSecurity" token="2000868" namespace="System.Windows.Forms"/>
<fieldType spec="Class"><definition assemblyName="mscorlib" name="CodeAccessPermission" token="2000807" namespace="System.Security"/>
</fieldType>
</definition>
</field>
<stackTrace><frame value="  at IntSecurity.get_AllWindows()" method="IntSecurity.get_AllWindows()" offset="13"/>
<frame value="  at IntSecurity.get_WindowAdornmentModification()" method="IntSecurity.get_WindowAdornmentModification()" offset="7"/>
<frame value="  at Form.get_IsRestrictedWindow()" method="Form.get_IsRestrictedWindow()" offset="35"/>
<frame value="  at Form.get_WindowText()" method="Form.get_WindowText()" offset="1"/>
<frame value="  at Control.get_Text()" method="Control.get_Text()" offset="30"/>
<frame value="  at Form.get_Text()" method="Form.get_Text()" offset="1"/>
<frame value="  at Form.FillInCreateParamsBorderIcons(CreateParams)" method="Form.FillInCreateParamsBorderIcons(CreateParams)" offset="12"/>
<frame value="  at Form.get_CreateParams()" method="Form.get_CreateParams()" offset="172"/>
<frame value="  at Control..ctor(Boolean)" method="Control..ctor(Boolean)" offset="289"/>
<frame value="  at Control..ctor()" method="Control..ctor()" offset="2"/>
<frame value="  at ScrollableControl..ctor()" method="ScrollableControl..ctor()" offset="56"/>
<frame value="  at ContainerControl..ctor()" method="ContainerControl..ctor()" offset="49"/>
<frame value="  at Form..ctor()" method="Form..ctor()" offset="81"/>
<frame value="  at Form1..ctor() in D:\WINDOWS 2012\BACK up 11\easy tranlate\easy translator\better gui\WindowsFormsApplication1\Form1.cs(26)" method="Form1..ctor()" offset="19" file="D:\WINDOWS 2012\BACK up 11\easy tranlate\easy translator\better gui\WindowsFormsApplication1\Form1.cs" line="26"><beforeSource><![CDATA[
       
]]></beforeSource>
<source><![CDATA[        public Form1()]]></source>
<afterSource><![CDATA[        {
            InitializeComponent();
        }]]></afterSource>
</frame>
<frame value="  at Form1Factory.Create(AutoValidate, FormBorderStyle, DialogResult, Icon, Form, Boolean, Int32, Control, Point, ISite)" method="Form1Factory.Create(AutoValidate, FormBorderStyle, DialogResult, Icon, Form, Boolean, Int32, Control, Point, ISite)" offset="0"/>
<frame value="  at ThreadHelper.ThreadStart_Context(Object)" method="ThreadHelper.ThreadStart_Context(Object)" offset="59"/>
<frame value="  at ExecutionContext.RunInternal(ExecutionContext, ContextCallback, Object, Boolean)" method="ExecutionContext.RunInternal(ExecutionContext, ContextCallback, Object, Boolean)" offset="112"/>
<frame value="  at ExecutionContext.Run(ExecutionContext, ContextCallback, Object, Boolean)" method="ExecutionContext.Run(ExecutionContext, ContextCallback, Object, Boolean)" offset="9"/>
<frame value="  at ExecutionContext.Run(ExecutionContext, ContextCallback, Object)" method="ExecutionContext.Run(ExecutionContext, ContextCallback, Object)" offset="52"/>
<frame value="  at ThreadHelper.ThreadStart(Object)" method="ThreadHelper.ThreadStart(Object)" offset="50"/>
</stackTrace>
</staticFieldStore>
<staticFieldStore fieldDisplayName="System.Windows.Forms.IntSecurity.windowAdornmentModification" declaringTypeDisplayName="System.Windows.Forms.IntSecurity" fieldShortDisplayName="windowAdornmentModification" wikiTopic="Value Stored In Static Field"><field><definition assemblyName="System.Windows.Forms" name="windowAdornmentModification" static="true" token="4003818"><declaringType assemblyName="System.Windows.Forms" name="IntSecurity" token="2000868" namespace="System.Windows.Forms"/>
<fieldType spec="Class"><definition assemblyName="mscorlib" name="CodeAccessPermission" token="2000807" namespace="System.Security"/>
</fieldType>
</definition>
</field>
<stackTrace><frame value="  at IntSecurity.get_WindowAdornmentModification()" method="IntSecurity.get_WindowAdornmentModification()" offset="12"/>
<frame value="  at Form.get_IsRestrictedWindow()" method="Form.get_IsRestrictedWindow()" offset="35"/>
<frame value="  at Form.get_WindowText()" method="Form.get_WindowText()" offset="1"/>
<frame value="  at Control.get_Text()" method="Control.get_Text()" offset="30"/>
<frame value="  at Form.get_Text()" method="Form.get_Text()" offset="1"/>
<frame value="  at Form.FillInCreateParamsBorderIcons(CreateParams)" method="Form.FillInCreateParamsBorderIcons(CreateParams)" offset="12"/>
<frame value="  at Form.get_CreateParams()" method="Form.get_CreateParams()" offset="172"/>
<frame value="  at Control..ctor(Boolean)" method="Control..ctor(Boolean)" offset="289"/>
<frame value="  at Control..ctor()" method="Control..ctor()" offset="2"/>
<frame value="  at ScrollableControl..ctor()" method="ScrollableControl..ctor()" offset="56"/>
<frame value="  at ContainerControl..ctor()" method="ContainerControl..ctor()" offset="49"/>
<frame value="  at Form..ctor()" method="Form..ctor()" offset="81"/>
<frame value="  at Form1..ctor() in D:\WINDOWS 2012\BACK up 11\easy tranlate\easy translator\better gui\WindowsFormsApplication1\Form1.cs(26)" method="Form1..ctor()" offset="19" file="D:\WINDOWS 2012\BACK up 11\easy tranlate\easy translator\better gui\WindowsFormsApplication1\Form1.cs" line="26"><beforeSource><![CDATA[
       
]]></beforeSource>
<source><![CDATA[        public Form1()]]></source>
<afterSource><![CDATA[        {
            InitializeComponent();
        }]]></afterSource>
</frame>
<frame value="  at Form1Factory.Create(AutoValidate, FormBorderStyle, DialogResult, Icon, Form, Boolean, Int32, Control, Point, ISite)" method="Form1Factory.Create(AutoValidate, FormBorderStyle, DialogResult, Icon, Form, Boolean, Int32, Control, Point, ISite)" offset="0"/>
<frame value="  at ThreadHelper.ThreadStart_Context(Object)" method="ThreadHelper.ThreadStart_Context(Object)" offset="59"/>
<frame value="  at ExecutionContext.RunInternal(ExecutionContext, ContextCallback, Object, Boolean)" method="ExecutionContext.RunInternal(ExecutionContext, ContextCallback, Object, Boolean)" offset="112"/>
<frame value="  at ExecutionContext.Run(ExecutionContext, ContextCallback, Object, Boolean)" method="ExecutionContext.Run(ExecutionContext, ContextCallback, Object, Boolean)" offset="9"/>
<frame value="  at ExecutionContext.Run(ExecutionContext, ContextCallback, Object)" method="ExecutionContext.Run(ExecutionContext, ContextCallback, Object)" offset="52"/>
<frame value="  at ThreadHelper.ThreadStart(Object)" method="ThreadHelper.ThreadStart(Object)" offset="50"/>
</stackTrace>
</staticFieldStore>
<uninstrumented extern="true" methodDisplayName="System.Boolean System.Windows.Forms.SafeNativeMethods.AdjustWindowRectEx(System.Windows.Forms.NativeMethods+RECT&amp; lpRect, System.Int32 dwStyle, System.Boolean bMenu, System.Int32 dwExStyle)" declaringTypeDisplayName="System.Windows.Forms.SafeNativeMethods" methodShortDisplayName="SafeNativeMethods.AdjustWindowRectEx(RECT&amp;, Int32, Boolean, Int32)" wikiTopic="External Method Called"/>
<staticFieldStore fieldDisplayName="System.Windows.Forms.WindowsFormsSynchronizationContext.previousSyncContext" declaringTypeDisplayName="System.Windows.Forms.WindowsFormsSynchronizationContext" fieldShortDisplayName="previousSyncContext" wikiTopic="Value Stored In Static Field"><field><definition assemblyName="System.Windows.Forms" name="previousSyncContext" static="true" token="40022a2"><declaringType assemblyName="System.Windows.Forms" name="WindowsFormsSynchronizationContext" token="20003fd" namespace="System.Windows.Forms"/>
<fieldType spec="Class"><definition assemblyName="mscorlib" name="SynchronizationContext" token="200019c" namespace="System.Threading"/>
</fieldType>
</definition>
</field>
<stackTrace><frame value="  at WindowsFormsSynchronizationContext.InstallIfNeeded()" method="WindowsFormsSynchronizationContext.InstallIfNeeded()" offset="23"/>
<frame value="  at Control..ctor(Boolean)" method="Control..ctor(Boolean)" offset="375"/>
<frame value="  at Control..ctor()" method="Control..ctor()" offset="2"/>
<frame value="  at ScrollableControl..ctor()" method="ScrollableControl..ctor()" offset="56"/>
<frame value="  at ContainerControl..ctor()" method="ContainerControl..ctor()" offset="49"/>
<frame value="  at Form..ctor()" method="Form..ctor()" offset="81"/>
<frame value="  at Form1..ctor() in D:\WINDOWS 2012\BACK up 11\easy tranlate\easy translator\better gui\WindowsFormsApplication1\Form1.cs(26)" method="Form1..ctor()" offset="19" file="D:\WINDOWS 2012\BACK up 11\easy tranlate\easy translator\better gui\WindowsFormsApplication1\Form1.cs" line="26"><beforeSource><![CDATA[
       
]]></beforeSource>
<source><![CDATA[        public Form1()]]></source>
<afterSource><![CDATA[        {
            InitializeComponent();
        }]]></afterSource>
</frame>
<frame value="  at Form1Factory.Create(AutoValidate, FormBorderStyle, DialogResult, Icon, Form, Boolean, Int32, Control, Point, ISite)" method="Form1Factory.Create(AutoValidate, FormBorderStyle, DialogResult, Icon, Form, Boolean, Int32, Control, Point, ISite)" offset="0"/>
<frame value="  at ThreadHelper.ThreadStart_Context(Object)" method="ThreadHelper.ThreadStart_Context(Object)" offset="59"/>
<frame value="  at ExecutionContext.RunInternal(ExecutionContext, ContextCallback, Object, Boolean)" method="ExecutionContext.RunInternal(ExecutionContext, ContextCallback, Object, Boolean)" offset="112"/>
<frame value="  at ExecutionContext.Run(ExecutionContext, ContextCallback, Object, Boolean)" method="ExecutionContext.Run(ExecutionContext, ContextCallback, Object, Boolean)" offset="9"/>
<frame value="  at ExecutionContext.Run(ExecutionContext, ContextCallback, Object)" method="ExecutionContext.Run(ExecutionContext, ContextCallback, Object)" offset="52"/>
<frame value="  at ThreadHelper.ThreadStart(Object)" method="ThreadHelper.ThreadStart(Object)" offset="50"/>
</stackTrace>
</staticFieldStore>
<staticFieldStore fieldDisplayName="System.Windows.Forms.WindowsFormsSynchronizationContext.inSyncContextInstallation" declaringTypeDisplayName="System.Windows.Forms.WindowsFormsSynchronizationContext" fieldShortDisplayName="inSyncContextInstallation" wikiTopic="Value Stored In Static Field"><field><definition assemblyName="System.Windows.Forms" name="inSyncContextInstallation" static="true" token="40022a1"><declaringType assemblyName="System.Windows.Forms" name="WindowsFormsSynchronizationContext" token="20003fd" namespace="System.Windows.Forms"/>
<fieldType spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Boolean" token="200009e" namespace="System"/>
</fieldType>
</definition>
</field>
<stackTrace><frame value="  at WindowsFormsSynchronizationContext.InstallIfNeeded()" method="WindowsFormsSynchronizationContext.InstallIfNeeded()" offset="37"/>
<frame value="  at Control..ctor(Boolean)" method="Control..ctor(Boolean)" offset="375"/>
<frame value="  at Control..ctor()" method="Control..ctor()" offset="2"/>
<frame value="  at ScrollableControl..ctor()" method="ScrollableControl..ctor()" offset="56"/>
<frame value="  at ContainerControl..ctor()" method="ContainerControl..ctor()" offset="49"/>
<frame value="  at Form..ctor()" method="Form..ctor()" offset="81"/>
<frame value="  at Form1..ctor() in D:\WINDOWS 2012\BACK up 11\easy tranlate\easy translator\better gui\WindowsFormsApplication1\Form1.cs(26)" method="Form1..ctor()" offset="19" file="D:\WINDOWS 2012\BACK up 11\easy tranlate\easy translator\better gui\WindowsFormsApplication1\Form1.cs" line="26"><beforeSource><![CDATA[
       
]]></beforeSource>
<source><![CDATA[        public Form1()]]></source>
<afterSource><![CDATA[        {
            InitializeComponent();
        }]]></afterSource>
</frame>
<frame value="  at Form1Factory.Create(AutoValidate, FormBorderStyle, DialogResult, Icon, Form, Boolean, Int32, Control, Point, ISite)" method="Form1Factory.Create(AutoValidate, FormBorderStyle, DialogResult, Icon, Form, Boolean, Int32, Control, Point, ISite)" offset="0"/>
<frame value="  at ThreadHelper.ThreadStart_Context(Object)" method="ThreadHelper.ThreadStart_Context(Object)" offset="59"/>
<frame value="  at ExecutionContext.RunInternal(ExecutionContext, ContextCallback, Object, Boolean)" method="ExecutionContext.RunInternal(ExecutionContext, ContextCallback, Object, Boolean)" offset="112"/>
<frame value="  at ExecutionContext.Run(ExecutionContext, ContextCallback, Object, Boolean)" method="ExecutionContext.Run(ExecutionContext, ContextCallback, Object, Boolean)" offset="9"/>
<frame value="  at ExecutionContext.Run(ExecutionContext, ContextCallback, Object)" method="ExecutionContext.Run(ExecutionContext, ContextCallback, Object)" offset="52"/>
<frame value="  at ThreadHelper.ThreadStart(Object)" method="ThreadHelper.ThreadStart(Object)" offset="50"/>
</stackTrace>
</staticFieldStore>
<staticFieldStore fieldDisplayName="System.Windows.Forms.RichTextBox.moduleHandle" declaringTypeDisplayName="System.Windows.Forms.RichTextBox" fieldShortDisplayName="moduleHandle" wikiTopic="Value Stored In Static Field"><field><definition assemblyName="System.Windows.Forms" name="moduleHandle" static="true" token="4001cc5"><declaringType assemblyName="System.Windows.Forms" name="RichTextBox" token="20002f9" namespace="System.Windows.Forms"/>
<fieldType spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="IntPtr" token="20000f5" namespace="System"/>
</fieldType>
</definition>
</field>
<stackTrace><frame value="  at RichTextBox.get_CreateParams()" method="RichTextBox.get_CreateParams()" offset="30"/>
<frame value="  at Control..ctor(Boolean)" method="Control..ctor(Boolean)" offset="289"/>
<frame value="  at Control..ctor()" method="Control..ctor()" offset="2"/>
<frame value="  at TextBoxBase..ctor()" method="TextBoxBase..ctor()" offset="31"/>
<frame value="  at RichTextBox..ctor()" method="RichTextBox..ctor()" offset="35"/>
<frame value="  at Form1.InitializeComponent() in D:\WINDOWS 2012\BACK up 11\easy tranlate\easy translator\better gui\WindowsFormsApplication1\Form1.Designer.cs(35)" method="Form1.InitializeComponent()" offset="24" file="D:\WINDOWS 2012\BACK up 11\easy tranlate\easy translator\better gui\WindowsFormsApplication1\Form1.Designer.cs" line="35"><beforeSource><![CDATA[        {
            this.button1 = new System.Windows.Forms.Button();
            this.button2 = new System.Windows.Forms.Button();]]></beforeSource>
<source><![CDATA[            this.richTextBox1 = new System.Windows.Forms.RichTextBox();]]></source>
<afterSource><![CDATA[            this.richTextBox2 = new System.Windows.Forms.RichTextBox();
            this.button3 = new System.Windows.Forms.Button();
            this.button4 = new System.Windows.Forms.Button();]]></afterSource>
</frame>
<frame value="  at Form1..ctor() in D:\WINDOWS 2012\BACK up 11\easy tranlate\easy translator\better gui\WindowsFormsApplication1\Form1.cs(28)" method="Form1..ctor()" offset="27" file="D:\WINDOWS 2012\BACK up 11\easy tranlate\easy translator\better gui\WindowsFormsApplication1\Form1.cs" line="28"><beforeSource><![CDATA[
        public Form1()
        {]]></beforeSource>
<source><![CDATA[            InitializeComponent();]]></source>
<afterSource><![CDATA[        }

        //-----------------------------------------------------]]></afterSource>
</frame>
<frame value="  at Form1Factory.Create(AutoValidate, FormBorderStyle, DialogResult, Icon, Form, Boolean, Int32, Control, Point, ISite)" method="Form1Factory.Create(AutoValidate, FormBorderStyle, DialogResult, Icon, Form, Boolean, Int32, Control, Point, ISite)" offset="0"/>
<frame value="  at ThreadHelper.ThreadStart_Context(Object)" method="ThreadHelper.ThreadStart_Context(Object)" offset="59"/>
<frame value="  at ExecutionContext.RunInternal(ExecutionContext, ContextCallback, Object, Boolean)" method="ExecutionContext.RunInternal(ExecutionContext, ContextCallback, Object, Boolean)" offset="112"/>
<frame value="  at ExecutionContext.Run(ExecutionContext, ContextCallback, Object, Boolean)" method="ExecutionContext.Run(ExecutionContext, ContextCallback, Object, Boolean)" offset="9"/>
<frame value="  at ExecutionContext.Run(ExecutionContext, ContextCallback, Object)" method="ExecutionContext.Run(ExecutionContext, ContextCallback, Object)" offset="52"/>
<frame value="  at ThreadHelper.ThreadStart(Object)" method="ThreadHelper.ThreadStart(Object)" offset="50"/>
</stackTrace>
</staticFieldStore>
<uninstrumented extern="true" methodDisplayName="System.Int32 System.Runtime.InteropServices.Marshal.GetLastWin32Error()" declaringTypeDisplayName="System.Runtime.InteropServices.Marshal" methodShortDisplayName="Marshal.GetLastWin32Error()" wikiTopic="External Method Called"/>
<uninstrumented uninstrumentable="true" methodDisplayName="System.Void System.Runtime.InteropServices.HandleRef..ctor(System.Object wrapper, System.IntPtr handle)" declaringTypeDisplayName="System.Runtime.InteropServices.HandleRef" methodShortDisplayName="HandleRef..ctor(Object, IntPtr)" wikiTopic="Uninstrumentable Method Called"/>
<uninstrumented extern="true" methodDisplayName="System.Int32 System.Windows.Forms.UnsafeNativeMethods.GetModuleFileName(System.Runtime.InteropServices.HandleRef hModule, System.Text.StringBuilder buffer, System.Int32 length)" declaringTypeDisplayName="System.Windows.Forms.UnsafeNativeMethods" methodShortDisplayName="UnsafeNativeMethods.GetModuleFileName(HandleRef, StringBuilder, Int32)" wikiTopic="External Method Called"/>
<log level="message" time="2014-11-27 15:56:52Z" category="symbols" message="could not load symbols for C:\Windows\Microsoft.Net\assembly\GAC_MSIL\System\v4.0_4.0.0.0__b77a5c561934e089\System.dll"/>
<uninstrumented testability="true" methodDisplayName="System.Boolean System.IO.File.Exists(System.String path)" declaringTypeDisplayName="System.IO.File" methodShortDisplayName="File.Exists(String)" wikiTopic="Testability Issue"/>
<uninstrumented extern="true" methodDisplayName="System.Int32 Microsoft.Win32.UnsafeNativeMethods.GetFileVersionInfoSize(System.String lptstrFilename, System.Int32&amp; handle)" declaringTypeDisplayName="Microsoft.Win32.UnsafeNativeMethods" methodShortDisplayName="UnsafeNativeMethods.GetFileVersionInfoSize(String, Int32&amp;)" wikiTopic="External Method Called"/>
<uninstrumented uninstrumentable="true" methodDisplayName="System.Void System.Runtime.InteropServices.HandleRef..ctor(System.Object wrapper, System.IntPtr handle)" declaringTypeDisplayName="System.Runtime.InteropServices.HandleRef" methodShortDisplayName="HandleRef..ctor(Object, IntPtr)" wikiTopic="Uninstrumentable Method Called"/>
<uninstrumented extern="true" methodDisplayName="System.Boolean Microsoft.Win32.UnsafeNativeMethods.GetFileVersionInfo(System.String lptstrFilename, System.Int32 dwHandle, System.Int32 dwLen, System.Runtime.InteropServices.HandleRef lpData)" declaringTypeDisplayName="Microsoft.Win32.UnsafeNativeMethods" methodShortDisplayName="UnsafeNativeMethods.GetFileVersionInfo(String, Int32, Int32, HandleRef)" wikiTopic="External Method Called"/>
<uninstrumented extern="true" methodDisplayName="System.Boolean Microsoft.Win32.UnsafeNativeMethods.VerQueryValue(System.Runtime.InteropServices.HandleRef pBlock, System.String lpSubBlock, System.IntPtr&amp; lplpBuffer, System.Int32&amp; len)" declaringTypeDisplayName="Microsoft.Win32.UnsafeNativeMethods" methodShortDisplayName="UnsafeNativeMethods.VerQueryValue(HandleRef, String, IntPtr&amp;, Int32&amp;)" wikiTopic="External Method Called"/>
<uninstrumented extern="true" methodDisplayName="System.String System.ParseNumbers.IntToString(System.Int32 l, System.Int32 radix, System.Int32 width, System.Char paddingChar, System.Int32 flags)" declaringTypeDisplayName="System.ParseNumbers" methodShortDisplayName="ParseNumbers.IntToString(Int32, Int32, Int32, Char, Int32)" wikiTopic="External Method Called"/>
<uninstrumented uninstrumentable="true" methodDisplayName="System.String System.Runtime.InteropServices.Marshal.PtrToStringAuto(System.IntPtr ptr)" declaringTypeDisplayName="System.Runtime.InteropServices.Marshal" methodShortDisplayName="Marshal.PtrToStringAuto(IntPtr)" wikiTopic="Uninstrumentable Method Called"/>
<uninstrumented extern="true" methodDisplayName="System.Int32 Microsoft.Win32.UnsafeNativeMethods.VerLanguageName(System.Int32 langID, System.Text.StringBuilder lpBuffer, System.Int32 nSize)" declaringTypeDisplayName="Microsoft.Win32.UnsafeNativeMethods" methodShortDisplayName="UnsafeNativeMethods.VerLanguageName(Int32, StringBuilder, Int32)" wikiTopic="External Method Called"/>
<uninstrumented uninstrumentable="true" methodDisplayName="System.Void System.Runtime.InteropServices.Marshal.PtrToStructure(System.IntPtr ptr, System.Object structure)" declaringTypeDisplayName="System.Runtime.InteropServices.Marshal" methodShortDisplayName="Marshal.PtrToStructure(IntPtr, Object)" wikiTopic="Uninstrumentable Method Called"/>
<staticFieldStore fieldDisplayName="System.Windows.Forms.RichTextBox.richEditMajorVersion" declaringTypeDisplayName="System.Windows.Forms.RichTextBox" fieldShortDisplayName="richEditMajorVersion" wikiTopic="Value Stored In Static Field"><field><definition assemblyName="System.Windows.Forms" name="richEditMajorVersion" static="true" token="4001cdd"><declaringType assemblyName="System.Windows.Forms" name="RichTextBox" token="20002f9" namespace="System.Windows.Forms"/>
<fieldType spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Int32" token="20000f3" namespace="System"/>
</fieldType>
</definition>
</field>
<stackTrace><frame value="  at RichTextBox.get_CreateParams()" method="RichTextBox.get_CreateParams()" offset="209"/>
<frame value="  at Control..ctor(Boolean)" method="Control..ctor(Boolean)" offset="289"/>
<frame value="  at Control..ctor()" method="Control..ctor()" offset="2"/>
<frame value="  at TextBoxBase..ctor()" method="TextBoxBase..ctor()" offset="31"/>
<frame value="  at RichTextBox..ctor()" method="RichTextBox..ctor()" offset="35"/>
<frame value="  at Form1.InitializeComponent() in D:\WINDOWS 2012\BACK up 11\easy tranlate\easy translator\better gui\WindowsFormsApplication1\Form1.Designer.cs(35)" method="Form1.InitializeComponent()" offset="24" file="D:\WINDOWS 2012\BACK up 11\easy tranlate\easy translator\better gui\WindowsFormsApplication1\Form1.Designer.cs" line="35"><beforeSource><![CDATA[        {
            this.button1 = new System.Windows.Forms.Button();
            this.button2 = new System.Windows.Forms.Button();]]></beforeSource>
<source><![CDATA[            this.richTextBox1 = new System.Windows.Forms.RichTextBox();]]></source>
<afterSource><![CDATA[            this.richTextBox2 = new System.Windows.Forms.RichTextBox();
            this.button3 = new System.Windows.Forms.Button();
            this.button4 = new System.Windows.Forms.Button();]]></afterSource>
</frame>
<frame value="  at Form1..ctor() in D:\WINDOWS 2012\BACK up 11\easy tranlate\easy translator\better gui\WindowsFormsApplication1\Form1.cs(28)" method="Form1..ctor()" offset="27" file="D:\WINDOWS 2012\BACK up 11\easy tranlate\easy translator\better gui\WindowsFormsApplication1\Form1.cs" line="28"><beforeSource><![CDATA[
        public Form1()
        {]]></beforeSource>
<source><![CDATA[            InitializeComponent();]]></source>
<afterSource><![CDATA[        }

        //-----------------------------------------------------]]></afterSource>
</frame>
<frame value="  at Form1Factory.Create(AutoValidate, FormBorderStyle, DialogResult, Icon, Form, Boolean, Int32, Control, Point, ISite)" method="Form1Factory.Create(AutoValidate, FormBorderStyle, DialogResult, Icon, Form, Boolean, Int32, Control, Point, ISite)" offset="0"/>
<frame value="  at ThreadHelper.ThreadStart_Context(Object)" method="ThreadHelper.ThreadStart_Context(Object)" offset="59"/>
<frame value="  at ExecutionContext.RunInternal(ExecutionContext, ContextCallback, Object, Boolean)" method="ExecutionContext.RunInternal(ExecutionContext, ContextCallback, Object, Boolean)" offset="112"/>
<frame value="  at ExecutionContext.Run(ExecutionContext, ContextCallback, Object, Boolean)" method="ExecutionContext.Run(ExecutionContext, ContextCallback, Object, Boolean)" offset="9"/>
<frame value="  at ExecutionContext.Run(ExecutionContext, ContextCallback, Object)" method="ExecutionContext.Run(ExecutionContext, ContextCallback, Object)" offset="52"/>
<frame value="  at ThreadHelper.ThreadStart(Object)" method="ThreadHelper.ThreadStart(Object)" offset="50"/>
</stackTrace>
</staticFieldStore>
<staticFieldStore fieldDisplayName="System.Windows.Forms.RichTextBox.shortcutsToDisable" declaringTypeDisplayName="System.Windows.Forms.RichTextBox" fieldShortDisplayName="shortcutsToDisable" wikiTopic="Value Stored In Static Field"><field><definition assemblyName="System.Windows.Forms" name="shortcutsToDisable" static="true" token="4001cdc"><declaringType assemblyName="System.Windows.Forms" name="RichTextBox" token="20002f9" namespace="System.Windows.Forms"/>
<fieldType spec="SzArray"><elementType spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Int32" token="20000f3" namespace="System"/>
</elementType>
</fieldType>
</definition>
</field>
<stackTrace><frame value="  at RichTextBox.set_RichTextShortcutsEnabled(Boolean)" method="RichTextBox.set_RichTextShortcutsEnabled(Boolean)" offset="24"/>
<frame value="  at RichTextBox..ctor()" method="RichTextBox..ctor()" offset="80"/>
<frame value="  at Form1.InitializeComponent() in D:\WINDOWS 2012\BACK up 11\easy tranlate\easy translator\better gui\WindowsFormsApplication1\Form1.Designer.cs(35)" method="Form1.InitializeComponent()" offset="24" file="D:\WINDOWS 2012\BACK up 11\easy tranlate\easy translator\better gui\WindowsFormsApplication1\Form1.Designer.cs" line="35"><beforeSource><![CDATA[        {
            this.button1 = new System.Windows.Forms.Button();
            this.button2 = new System.Windows.Forms.Button();]]></beforeSource>
<source><![CDATA[            this.richTextBox1 = new System.Windows.Forms.RichTextBox();]]></source>
<afterSource><![CDATA[            this.richTextBox2 = new System.Windows.Forms.RichTextBox();
            this.button3 = new System.Windows.Forms.Button();
            this.button4 = new System.Windows.Forms.Button();]]></afterSource>
</frame>
<frame value="  at Form1..ctor() in D:\WINDOWS 2012\BACK up 11\easy tranlate\easy translator\better gui\WindowsFormsApplication1\Form1.cs(28)" method="Form1..ctor()" offset="27" file="D:\WINDOWS 2012\BACK up 11\easy tranlate\easy translator\better gui\WindowsFormsApplication1\Form1.cs" line="28"><beforeSource><![CDATA[
        public Form1()
        {]]></beforeSource>
<source><![CDATA[            InitializeComponent();]]></source>
<afterSource><![CDATA[        }

        //-----------------------------------------------------]]></afterSource>
</frame>
<frame value="  at Form1Factory.Create(AutoValidate, FormBorderStyle, DialogResult, Icon, Form, Boolean, Int32, Control, Point, ISite)" method="Form1Factory.Create(AutoValidate, FormBorderStyle, DialogResult, Icon, Form, Boolean, Int32, Control, Point, ISite)" offset="0"/>
<frame value="  at ThreadHelper.ThreadStart_Context(Object)" method="ThreadHelper.ThreadStart_Context(Object)" offset="59"/>
<frame value="  at ExecutionContext.RunInternal(ExecutionContext, ContextCallback, Object, Boolean)" method="ExecutionContext.RunInternal(ExecutionContext, ContextCallback, Object, Boolean)" offset="112"/>
<frame value="  at ExecutionContext.Run(ExecutionContext, ContextCallback, Object, Boolean)" method="ExecutionContext.Run(ExecutionContext, ContextCallback, Object, Boolean)" offset="9"/>
<frame value="  at ExecutionContext.Run(ExecutionContext, ContextCallback, Object)" method="ExecutionContext.Run(ExecutionContext, ContextCallback, Object)" offset="52"/>
<frame value="  at ThreadHelper.ThreadStart(Object)" method="ThreadHelper.ThreadStart(Object)" offset="50"/>
</stackTrace>
</staticFieldStore>
<log level="message" time="2014-11-27 15:56:54Z" category="symbols" message="could not load symbols for C:\Windows\Microsoft.Net\assembly\GAC_MSIL\System.Drawing\v4.0_4.0.0.0__b03f5f7f11d50a3a\System.Drawing.dll"/>
<uninstrumented testability="true" methodDisplayName="System.OperatingSystem System.Environment.get_OSVersion()" declaringTypeDisplayName="System.Environment" methodShortDisplayName="Environment.get_OSVersion()" wikiTopic="Testability Issue"/>
<uninstrumented methodDisplayName="System.PlatformID System.OperatingSystem.get_Platform()" declaringTypeDisplayName="System.OperatingSystem" methodShortDisplayName="OperatingSystem.get_Platform()" wikiTopic="Uninstrumented Method Called"/>
<uninstrumented methodDisplayName="System.Version System.OperatingSystem.get_Version()" declaringTypeDisplayName="System.OperatingSystem" methodShortDisplayName="OperatingSystem.get_Version()" wikiTopic="Uninstrumented Method Called"/>
<uninstrumented extern="true" methodDisplayName="System.Int32 System.Drawing.UnsafeNativeMethods.GetSystemDefaultLCID()" declaringTypeDisplayName="System.Drawing.UnsafeNativeMethods" methodShortDisplayName="UnsafeNativeMethods.GetSystemDefaultLCID()" wikiTopic="External Method Called"/>
<uninstrumented extern="true" methodDisplayName="System.IntPtr System.Drawing.UnsafeNativeMethods.GetStockObject(System.Int32 nIndex)" declaringTypeDisplayName="System.Drawing.UnsafeNativeMethods" methodShortDisplayName="UnsafeNativeMethods.GetStockObject(Int32)" wikiTopic="External Method Called"/>
<uninstrumented uninstrumentable="true" methodDisplayName="System.Int32 System.Runtime.InteropServices.Marshal.SizeOf(System.Type t)" declaringTypeDisplayName="System.Runtime.InteropServices.Marshal" methodShortDisplayName="Marshal.SizeOf(Type)" wikiTopic="Uninstrumentable Method Called"/>
<uninstrumented extern="true" methodDisplayName="System.Int32 System.Drawing.SafeNativeMethods.GetObject(System.Runtime.InteropServices.HandleRef hObject, System.Int32 nSize, System.Drawing.SafeNativeMethods+LOGFONT lf)" declaringTypeDisplayName="System.Drawing.SafeNativeMethods" methodShortDisplayName="SafeNativeMethods.GetObject(HandleRef, Int32, LOGFONT)" wikiTopic="External Method Called"/>
<uninstrumented extern="true" methodDisplayName="System.IntPtr System.Drawing.UnsafeNativeMethods.IntGetDC(System.Runtime.InteropServices.HandleRef hWnd)" declaringTypeDisplayName="System.Drawing.UnsafeNativeMethods" methodShortDisplayName="UnsafeNativeMethods.IntGetDC(HandleRef)" wikiTopic="External Method Called"/>
<uninstrumented extern="true" methodDisplayName="System.Int32 System.Drawing.SafeNativeMethods+Gdip.GdipCreateFontFromLogfontW(System.Runtime.InteropServices.HandleRef hdc, System.Object lf, System.IntPtr&amp; font)" declaringTypeDisplayName="System.Drawing.SafeNativeMethods+Gdip" methodShortDisplayName="Gdip.GdipCreateFontFromLogfontW(HandleRef, Object, IntPtr&amp;)" wikiTopic="External Method Called"/>
<uninstrumented extern="true" methodDisplayName="System.Int32 System.Drawing.SafeNativeMethods+Gdip.GdipGetFontUnit(System.Runtime.InteropServices.HandleRef font, System.Drawing.GraphicsUnit&amp; unit)" declaringTypeDisplayName="System.Drawing.SafeNativeMethods+Gdip" methodShortDisplayName="Gdip.GdipGetFontUnit(HandleRef, GraphicsUnit&amp;)" wikiTopic="External Method Called"/>
<uninstrumented extern="true" methodDisplayName="System.Int32 System.Drawing.SafeNativeMethods+Gdip.GdipGetFontSize(System.Runtime.InteropServices.HandleRef font, System.Single&amp; size)" declaringTypeDisplayName="System.Drawing.SafeNativeMethods+Gdip" methodShortDisplayName="Gdip.GdipGetFontSize(HandleRef, Single&amp;)" wikiTopic="External Method Called"/>
<uninstrumented extern="true" methodDisplayName="System.Int32 System.Drawing.SafeNativeMethods+Gdip.GdipGetFontStyle(System.Runtime.InteropServices.HandleRef font, System.Drawing.FontStyle&amp; style)" declaringTypeDisplayName="System.Drawing.SafeNativeMethods+Gdip" methodShortDisplayName="Gdip.GdipGetFontStyle(HandleRef, FontStyle&amp;)" wikiTopic="External Method Called"/>
<uninstrumented extern="true" methodDisplayName="System.Int32 System.Drawing.SafeNativeMethods+Gdip.GdipGetFamily(System.Runtime.InteropServices.HandleRef font, System.IntPtr&amp; family)" declaringTypeDisplayName="System.Drawing.SafeNativeMethods+Gdip" methodShortDisplayName="Gdip.GdipGetFamily(HandleRef, IntPtr&amp;)" wikiTopic="External Method Called"/>
<uninstrumented uninstrumentable="true" methodDisplayName="System.IntPtr System.Runtime.InteropServices.HandleRef.op_Explicit(System.Runtime.InteropServices.HandleRef value)" declaringTypeDisplayName="System.Runtime.InteropServices.HandleRef" methodShortDisplayName="HandleRef.op_Explicit(HandleRef)" wikiTopic="Uninstrumentable Method Called"/>
<uninstrumented extern="true" methodDisplayName="System.Int32 System.Drawing.UnsafeNativeMethods.IntReleaseDC(System.Runtime.InteropServices.HandleRef hWnd, System.Runtime.InteropServices.HandleRef hDC)" declaringTypeDisplayName="System.Drawing.UnsafeNativeMethods" methodShortDisplayName="UnsafeNativeMethods.IntReleaseDC(HandleRef, HandleRef)" wikiTopic="External Method Called"/>
<uninstrumented extern="true" methodDisplayName="System.Int32 System.Drawing.SafeNativeMethods+Gdip.GdipCreateFromHDC(System.Runtime.InteropServices.HandleRef hdc, System.IntPtr&amp; graphics)" declaringTypeDisplayName="System.Drawing.SafeNativeMethods+Gdip" methodShortDisplayName="Gdip.GdipCreateFromHDC(HandleRef, IntPtr&amp;)" wikiTopic="External Method Called"/>
<uninstrumented extern="true" methodDisplayName="System.Int32 System.Drawing.SafeNativeMethods+Gdip.GdipGetDpiY(System.Runtime.InteropServices.HandleRef graphics, System.Single[] dpi)" declaringTypeDisplayName="System.Drawing.SafeNativeMethods+Gdip" methodShortDisplayName="Gdip.GdipGetDpiY(HandleRef, Single[])" wikiTopic="External Method Called"/>
<uninstrumented extern="true" methodDisplayName="System.Int32 System.Drawing.SafeNativeMethods+Gdip.GdipGetFontHeight(System.Runtime.InteropServices.HandleRef font, System.Runtime.InteropServices.HandleRef graphics, System.Single&amp; size)" declaringTypeDisplayName="System.Drawing.SafeNativeMethods+Gdip" methodShortDisplayName="Gdip.GdipGetFontHeight(HandleRef, HandleRef, Single&amp;)" wikiTopic="External Method Called"/>
<uninstrumented extern="true" methodDisplayName="System.Int32 System.Drawing.SafeNativeMethods+Gdip.GdipGetEmHeight(System.Runtime.InteropServices.HandleRef family, System.Drawing.FontStyle style, System.Int32&amp; EmHeight)" declaringTypeDisplayName="System.Drawing.SafeNativeMethods+Gdip" methodShortDisplayName="Gdip.GdipGetEmHeight(HandleRef, FontStyle, Int32&amp;)" wikiTopic="External Method Called"/>
<uninstrumented extern="true" methodDisplayName="System.Int32 System.Drawing.SafeNativeMethods+Gdip.GdipGetLineSpacing(System.Runtime.InteropServices.HandleRef family, System.Drawing.FontStyle style, System.Int32&amp; LineSpaceing)" declaringTypeDisplayName="System.Drawing.SafeNativeMethods+Gdip" methodShortDisplayName="Gdip.GdipGetLineSpacing(HandleRef, FontStyle, Int32&amp;)" wikiTopic="External Method Called"/>
<uninstrumented extern="true" methodDisplayName="System.Int32 System.Drawing.SafeNativeMethods+Gdip.IntGdipDeleteGraphics(System.Runtime.InteropServices.HandleRef graphics)" declaringTypeDisplayName="System.Drawing.SafeNativeMethods+Gdip" methodShortDisplayName="Gdip.IntGdipDeleteGraphics(HandleRef)" wikiTopic="External Method Called"/>
<uninstrumented extern="true" methodDisplayName="System.Int32 System.Drawing.SafeNativeMethods+Gdip.GdipCreateFont(System.Runtime.InteropServices.HandleRef fontFamily, System.Single emSize, System.Drawing.FontStyle style, System.Drawing.GraphicsUnit unit, System.IntPtr&amp; font)" declaringTypeDisplayName="System.Drawing.SafeNativeMethods+Gdip" methodShortDisplayName="Gdip.GdipCreateFont(HandleRef, Single, FontStyle, GraphicsUnit, IntPtr&amp;)" wikiTopic="External Method Called"/>
<uninstrumented extern="true" methodDisplayName="System.Int32 System.Drawing.SafeNativeMethods+Gdip.IntGdipDeleteFont(System.Runtime.InteropServices.HandleRef font)" declaringTypeDisplayName="System.Drawing.SafeNativeMethods+Gdip" methodShortDisplayName="Gdip.IntGdipDeleteFont(HandleRef)" wikiTopic="External Method Called"/>
<staticFieldStore fieldDisplayName="System.Windows.Forms.Control.defaultFont" declaringTypeDisplayName="System.Windows.Forms.Control" fieldShortDisplayName="defaultFont" wikiTopic="Value Stored In Static Field"><field><definition assemblyName="System.Windows.Forms" name="defaultFont" static="true" token="400018e"><declaringType assemblyName="System.Windows.Forms" name="Control" token="2000057" namespace="System.Windows.Forms"/>
<fieldType spec="Class"><definition assemblyName="System.Drawing" name="Font" token="2000056" namespace="System.Drawing"/>
</fieldType>
</definition>
</field>
<stackTrace><frame value="  at Control.get_DefaultFont()" method="Control.get_DefaultFont()" offset="12"/>
<frame value="  at Control.get_Font()" method="Control.get_Font()" offset="84"/>
<frame value="  at RichTextBox.get_Font()" method="RichTextBox.get_Font()" offset="1"/>
<frame value="  at Control.get_FontHeight()" method="Control.get_FontHeight()" offset="119"/>
<frame value="  at TextBoxBase.get_PreferredHeight()" method="TextBoxBase.get_PreferredHeight()" offset="1"/>
<frame value="  at TextBoxBase.AdjustHeight(Boolean)" method="TextBoxBase.AdjustHeight(Boolean)" offset="100"/>
<frame value="  at TextBoxBase.set_Multiline(Boolean)" method="TextBoxBase.set_Multiline(Boolean)" offset="96"/>
<frame value="  at RichTextBox.set_Multiline(Boolean)" method="RichTextBox.set_Multiline(Boolean)" offset="2"/>
<frame value="  at RichTextBox..ctor()" method="RichTextBox..ctor()" offset="98"/>
<frame value="  at Form1.InitializeComponent() in D:\WINDOWS 2012\BACK up 11\easy tranlate\easy translator\better gui\WindowsFormsApplication1\Form1.Designer.cs(35)" method="Form1.InitializeComponent()" offset="24" file="D:\WINDOWS 2012\BACK up 11\easy tranlate\easy translator\better gui\WindowsFormsApplication1\Form1.Designer.cs" line="35"><beforeSource><![CDATA[        {
            this.button1 = new System.Windows.Forms.Button();
            this.button2 = new System.Windows.Forms.Button();]]></beforeSource>
<source><![CDATA[            this.richTextBox1 = new System.Windows.Forms.RichTextBox();]]></source>
<afterSource><![CDATA[            this.richTextBox2 = new System.Windows.Forms.RichTextBox();
            this.button3 = new System.Windows.Forms.Button();
            this.button4 = new System.Windows.Forms.Button();]]></afterSource>
</frame>
<frame value="  at Form1..ctor() in D:\WINDOWS 2012\BACK up 11\easy tranlate\easy translator\better gui\WindowsFormsApplication1\Form1.cs(28)" method="Form1..ctor()" offset="27" file="D:\WINDOWS 2012\BACK up 11\easy tranlate\easy translator\better gui\WindowsFormsApplication1\Form1.cs" line="28"><beforeSource><![CDATA[
        public Form1()
        {]]></beforeSource>
<source><![CDATA[            InitializeComponent();]]></source>
<afterSource><![CDATA[        }

        //-----------------------------------------------------]]></afterSource>
</frame>
<frame value="  at Form1Factory.Create(AutoValidate, FormBorderStyle, DialogResult, Icon, Form, Boolean, Int32, Control, Point, ISite)" method="Form1Factory.Create(AutoValidate, FormBorderStyle, DialogResult, Icon, Form, Boolean, Int32, Control, Point, ISite)" offset="0"/>
<frame value="  at ThreadHelper.ThreadStart_Context(Object)" method="ThreadHelper.ThreadStart_Context(Object)" offset="59"/>
<frame value="  at ExecutionContext.RunInternal(ExecutionContext, ContextCallback, Object, Boolean)" method="ExecutionContext.RunInternal(ExecutionContext, ContextCallback, Object, Boolean)" offset="112"/>
<frame value="  at ExecutionContext.Run(ExecutionContext, ContextCallback, Object, Boolean)" method="ExecutionContext.Run(ExecutionContext, ContextCallback, Object, Boolean)" offset="9"/>
<frame value="  at ExecutionContext.Run(ExecutionContext, ContextCallback, Object)" method="ExecutionContext.Run(ExecutionContext, ContextCallback, Object)" offset="52"/>
<frame value="  at ThreadHelper.ThreadStart(Object)" method="ThreadHelper.ThreadStart(Object)" offset="50"/>
</stackTrace>
</staticFieldStore>
<uninstrumented extern="true" methodDisplayName="System.Double System.Math.Ceiling(System.Double a)" declaringTypeDisplayName="System.Math" methodShortDisplayName="Math.Ceiling(Double)" wikiTopic="External Method Called"/>
<staticFieldStore fieldDisplayName="Microsoft.Win32.SystemEvents._handlers" declaringTypeDisplayName="Microsoft.Win32.SystemEvents" fieldShortDisplayName="_handlers" wikiTopic="Value Stored In Static Field"><field><definition assemblyName="System" name="_handlers" static="true" token="4000d25"><declaringType assemblyName="System" name="SystemEvents" token="20002c1" namespace="Microsoft.Win32"/>
<fieldType spec="Class"><definition assemblyName="mscorlib" name="Dictionary`2" token="200034b" namespace="System.Collections.Generic"><genericParameter value="TKey"/>
<genericParameter value="TValue"/>
</definition>
<genericTypeArgument spec="Class"><definition assemblyName="mscorlib" name="Object" token="2000002" namespace="System"/>
</genericTypeArgument>
<genericTypeArgument spec="Class"><definition assemblyName="mscorlib" name="List`1" token="2000362" namespace="System.Collections.Generic"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="Class"><definition assemblyName="System" name="SystemEventInvokeInfo" token="20002c2"><declaringType assemblyName="System" name="SystemEvents" token="20002c1" namespace="Microsoft.Win32"/>
</definition>
</genericTypeArgument>
</genericTypeArgument>
</fieldType>
</definition>
</field>
<stackTrace><frame value="  at SystemEvents.AddEventHandler(Object, Delegate)" method="SystemEvents.AddEventHandler(Object, Delegate)" offset="28"/>
<frame value="  at SystemEvents.add_UserPreferenceChanging(UserPreferenceChangingEventHandler)" method="SystemEvents.add_UserPreferenceChanging(UserPreferenceChangingEventHandler)" offset="6"/>
<frame value="  at KnownColorTable.InitColorTable()" method="KnownColorTable.InitColorTable()" offset="23"/>
<frame value="  at KnownColorTable.EnsureColorTable()" method="KnownColorTable.EnsureColorTable()" offset="7"/>
<frame value="  at KnownColorTable.KnownColorToArgb(KnownColor)" method="KnownColorTable.KnownColorToArgb(KnownColor)" offset="0"/>
<frame value="  at Color.get_Value()" method="Color.get_Value()" offset="35"/>
<frame value="  at Color.get_A()" method="Color.get_A()" offset="1"/>
<frame value="  at Control.get_RenderTransparent()" method="Control.get_RenderTransparent()" offset="22"/>
<frame value="  at Control.OnMove(EventArgs)" method="Control.OnMove(EventArgs)" offset="34"/>
<frame value="  at Control.OnLocationChanged(EventArgs)" method="Control.OnLocationChanged(EventArgs)" offset="6"/>
<frame value="  at Control.UpdateBounds(Int32, Int32, Int32, Int32, Int32, Int32)" method="Control.UpdateBounds(Int32, Int32, Int32, Int32, Int32, Int32)" offset="125"/>
<frame value="  at Control.UpdateBounds(Int32, Int32, Int32, Int32)" method="Control.UpdateBounds(Int32, Int32, Int32, Int32)" offset="125"/>
<frame value="  at Control.SetBoundsCore(Int32, Int32, Int32, Int32, BoundsSpecified)" method="Control.SetBoundsCore(Int32, Int32, Int32, Int32, BoundsSpecified)" offset="134"/>
<frame value="  at Control.SetBounds(Int32, Int32, Int32, Int32, BoundsSpecified)" method="Control.SetBounds(Int32, Int32, Int32, Int32, BoundsSpecified)" offset="101"/>
<frame value="  at Control.set_Location(Point)" method="Control.set_Location(Point)" offset="28"/>
<frame value="  at Form1.InitializeComponent() in D:\WINDOWS 2012\BACK up 11\easy tranlate\easy translator\better gui\WindowsFormsApplication1\Form1.Designer.cs(51)" method="Form1.InitializeComponent()" offset="183" file="D:\WINDOWS 2012\BACK up 11\easy tranlate\easy translator\better gui\WindowsFormsApplication1\Form1.Designer.cs" line="51"><beforeSource><![CDATA[            // 
            // button1
            // ]]></beforeSource>
<source><![CDATA[            this.button1.Location = new System.Drawing.Point(547, 142);]]></source>
<afterSource><![CDATA[            this.button1.Name = "button1";
            this.button1.Size = new System.Drawing.Size(75, 32);
            this.button1.TabIndex = 0;]]></afterSource>
</frame>
<frame value="  at Form1..ctor() in D:\WINDOWS 2012\BACK up 11\easy tranlate\easy translator\better gui\WindowsFormsApplication1\Form1.cs(28)" method="Form1..ctor()" offset="27" file="D:\WINDOWS 2012\BACK up 11\easy tranlate\easy translator\better gui\WindowsFormsApplication1\Form1.cs" line="28"><beforeSource><![CDATA[
        public Form1()
        {]]></beforeSource>
<source><![CDATA[            InitializeComponent();]]></source>
<afterSource><![CDATA[        }

        //-----------------------------------------------------]]></afterSource>
</frame>
<frame value="  at Form1Factory.Create(AutoValidate, FormBorderStyle, DialogResult, Icon, Form, Boolean, Int32, Control, Point, ISite)" method="Form1Factory.Create(AutoValidate, FormBorderStyle, DialogResult, Icon, Form, Boolean, Int32, Control, Point, ISite)" offset="0"/>
<frame value="  at ThreadHelper.ThreadStart_Context(Object)" method="ThreadHelper.ThreadStart_Context(Object)" offset="59"/>
<frame value="  at ExecutionContext.RunInternal(ExecutionContext, ContextCallback, Object, Boolean)" method="ExecutionContext.RunInternal(ExecutionContext, ContextCallback, Object, Boolean)" offset="112"/>
<frame value="  at ExecutionContext.Run(ExecutionContext, ContextCallback, Object, Boolean)" method="ExecutionContext.Run(ExecutionContext, ContextCallback, Object, Boolean)" offset="9"/>
<frame value="  at ExecutionContext.Run(ExecutionContext, ContextCallback, Object)" method="ExecutionContext.Run(ExecutionContext, ContextCallback, Object)" offset="52"/>
<frame value="  at ThreadHelper.ThreadStart(Object)" method="ThreadHelper.ThreadStart(Object)" offset="50"/>
</stackTrace>
</staticFieldStore>
<uninstrumented extern="true" methodDisplayName="System.IntPtr Microsoft.Win32.UnsafeNativeMethods.GetProcessWindowStation()" declaringTypeDisplayName="Microsoft.Win32.UnsafeNativeMethods" methodShortDisplayName="UnsafeNativeMethods.GetProcessWindowStation()" wikiTopic="External Method Called"/>
<staticFieldStore fieldDisplayName="Microsoft.Win32.SystemEvents.isUserInteractive" declaringTypeDisplayName="Microsoft.Win32.SystemEvents" fieldShortDisplayName="isUserInteractive" wikiTopic="Value Stored In Static Field"><field><definition assemblyName="System" name="isUserInteractive" static="true" token="4000d27"><declaringType assemblyName="System" name="SystemEvents" token="20002c1" namespace="Microsoft.Win32"/>
<fieldType spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Boolean" token="200009e" namespace="System"/>
</fieldType>
</definition>
</field>
<stackTrace><frame value="  at SystemEvents.get_UserInteractive()" method="SystemEvents.get_UserInteractive()" offset="56"/>
<frame value="  at SystemEvents.EnsureSystemEvents(Boolean, Boolean)" method="SystemEvents.EnsureSystemEvents(Boolean, Boolean)" offset="81"/>
<frame value="  at SystemEvents.AddEventHandler(Object, Delegate)" method="SystemEvents.AddEventHandler(Object, Delegate)" offset="35"/>
<frame value="  at SystemEvents.add_UserPreferenceChanging(UserPreferenceChangingEventHandler)" method="SystemEvents.add_UserPreferenceChanging(UserPreferenceChangingEventHandler)" offset="6"/>
<frame value="  at KnownColorTable.InitColorTable()" method="KnownColorTable.InitColorTable()" offset="23"/>
<frame value="  at KnownColorTable.EnsureColorTable()" method="KnownColorTable.EnsureColorTable()" offset="7"/>
<frame value="  at KnownColorTable.KnownColorToArgb(KnownColor)" method="KnownColorTable.KnownColorToArgb(KnownColor)" offset="0"/>
<frame value="  at Color.get_Value()" method="Color.get_Value()" offset="35"/>
<frame value="  at Color.get_A()" method="Color.get_A()" offset="1"/>
<frame value="  at Control.get_RenderTransparent()" method="Control.get_RenderTransparent()" offset="22"/>
<frame value="  at Control.OnMove(EventArgs)" method="Control.OnMove(EventArgs)" offset="34"/>
<frame value="  at Control.OnLocationChanged(EventArgs)" method="Control.OnLocationChanged(EventArgs)" offset="6"/>
<frame value="  at Control.UpdateBounds(Int32, Int32, Int32, Int32, Int32, Int32)" method="Control.UpdateBounds(Int32, Int32, Int32, Int32, Int32, Int32)" offset="125"/>
<frame value="  at Control.UpdateBounds(Int32, Int32, Int32, Int32)" method="Control.UpdateBounds(Int32, Int32, Int32, Int32)" offset="125"/>
<frame value="  at Control.SetBoundsCore(Int32, Int32, Int32, Int32, BoundsSpecified)" method="Control.SetBoundsCore(Int32, Int32, Int32, Int32, BoundsSpecified)" offset="134"/>
<frame value="  at Control.SetBounds(Int32, Int32, Int32, Int32, BoundsSpecified)" method="Control.SetBounds(Int32, Int32, Int32, Int32, BoundsSpecified)" offset="101"/>
<frame value="  at Control.set_Location(Point)" method="Control.set_Location(Point)" offset="28"/>
<frame value="  at Form1.InitializeComponent() in D:\WINDOWS 2012\BACK up 11\easy tranlate\easy translator\better gui\WindowsFormsApplication1\Form1.Designer.cs(51)" method="Form1.InitializeComponent()" offset="183" file="D:\WINDOWS 2012\BACK up 11\easy tranlate\easy translator\better gui\WindowsFormsApplication1\Form1.Designer.cs" line="51"><beforeSource><![CDATA[            // 
            // button1
            // ]]></beforeSource>
<source><![CDATA[            this.button1.Location = new System.Drawing.Point(547, 142);]]></source>
<afterSource><![CDATA[            this.button1.Name = "button1";
            this.button1.Size = new System.Drawing.Size(75, 32);
            this.button1.TabIndex = 0;]]></afterSource>
</frame>
<frame value="  at Form1..ctor() in D:\WINDOWS 2012\BACK up 11\easy tranlate\easy translator\better gui\WindowsFormsApplication1\Form1.cs(28)" method="Form1..ctor()" offset="27" file="D:\WINDOWS 2012\BACK up 11\easy tranlate\easy translator\better gui\WindowsFormsApplication1\Form1.cs" line="28"><beforeSource><![CDATA[
        public Form1()
        {]]></beforeSource>
<source><![CDATA[            InitializeComponent();]]></source>
<afterSource><![CDATA[        }

        //-----------------------------------------------------]]></afterSource>
</frame>
<frame value="  at Form1Factory.Create(AutoValidate, FormBorderStyle, DialogResult, Icon, Form, Boolean, Int32, Control, Point, ISite)" method="Form1Factory.Create(AutoValidate, FormBorderStyle, DialogResult, Icon, Form, Boolean, Int32, Control, Point, ISite)" offset="0"/>
<frame value="  at ThreadHelper.ThreadStart_Context(Object)" method="ThreadHelper.ThreadStart_Context(Object)" offset="59"/>
<frame value="  at ExecutionContext.RunInternal(ExecutionContext, ContextCallback, Object, Boolean)" method="ExecutionContext.RunInternal(ExecutionContext, ContextCallback, Object, Boolean)" offset="112"/>
<frame value="  at ExecutionContext.Run(ExecutionContext, ContextCallback, Object, Boolean)" method="ExecutionContext.Run(ExecutionContext, ContextCallback, Object, Boolean)" offset="9"/>
<frame value="  at ExecutionContext.Run(ExecutionContext, ContextCallback, Object)" method="ExecutionContext.Run(ExecutionContext, ContextCallback, Object)" offset="52"/>
<frame value="  at ThreadHelper.ThreadStart(Object)" method="ThreadHelper.ThreadStart(Object)" offset="50"/>
</stackTrace>
</staticFieldStore>
<uninstrumented uninstrumentable="true" methodDisplayName="System.Int32 System.Runtime.InteropServices.Marshal.SizeOf(System.Object structure)" declaringTypeDisplayName="System.Runtime.InteropServices.Marshal" methodShortDisplayName="Marshal.SizeOf(Object)" wikiTopic="Uninstrumentable Method Called"/>
<uninstrumented extern="true" methodDisplayName="System.Boolean Microsoft.Win32.UnsafeNativeMethods.GetUserObjectInformation(System.Runtime.InteropServices.HandleRef hObj, System.Int32 nIndex, Microsoft.Win32.NativeMethods+USEROBJECTFLAGS pvBuffer, System.Int32 nLength, System.Int32&amp; lpnLengthNeeded)" declaringTypeDisplayName="Microsoft.Win32.UnsafeNativeMethods" methodShortDisplayName="UnsafeNativeMethods.GetUserObjectInformation(HandleRef, Int32, USEROBJECTFLAGS, Int32, Int32&amp;)" wikiTopic="External Method Called"/>
<staticFieldStore fieldDisplayName="Microsoft.Win32.SystemEvents.processWinStation" declaringTypeDisplayName="Microsoft.Win32.SystemEvents" fieldShortDisplayName="processWinStation" wikiTopic="Value Stored In Static Field"><field><definition assemblyName="System" name="processWinStation" static="true" token="4000d26"><declaringType assemblyName="System" name="SystemEvents" token="20002c1" namespace="Microsoft.Win32"/>
<fieldType spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="IntPtr" token="20000f5" namespace="System"/>
</fieldType>
</definition>
</field>
<stackTrace><frame value="  at SystemEvents.get_UserInteractive()" method="SystemEvents.get_UserInteractive()" offset="114"/>
<frame value="  at SystemEvents.EnsureSystemEvents(Boolean, Boolean)" method="SystemEvents.EnsureSystemEvents(Boolean, Boolean)" offset="81"/>
<frame value="  at SystemEvents.AddEventHandler(Object, Delegate)" method="SystemEvents.AddEventHandler(Object, Delegate)" offset="35"/>
<frame value="  at SystemEvents.add_UserPreferenceChanging(UserPreferenceChangingEventHandler)" method="SystemEvents.add_UserPreferenceChanging(UserPreferenceChangingEventHandler)" offset="6"/>
<frame value="  at KnownColorTable.InitColorTable()" method="KnownColorTable.InitColorTable()" offset="23"/>
<frame value="  at KnownColorTable.EnsureColorTable()" method="KnownColorTable.EnsureColorTable()" offset="7"/>
<frame value="  at KnownColorTable.KnownColorToArgb(KnownColor)" method="KnownColorTable.KnownColorToArgb(KnownColor)" offset="0"/>
<frame value="  at Color.get_Value()" method="Color.get_Value()" offset="35"/>
<frame value="  at Color.get_A()" method="Color.get_A()" offset="1"/>
<frame value="  at Control.get_RenderTransparent()" method="Control.get_RenderTransparent()" offset="22"/>
<frame value="  at Control.OnMove(EventArgs)" method="Control.OnMove(EventArgs)" offset="34"/>
<frame value="  at Control.OnLocationChanged(EventArgs)" method="Control.OnLocationChanged(EventArgs)" offset="6"/>
<frame value="  at Control.UpdateBounds(Int32, Int32, Int32, Int32, Int32, Int32)" method="Control.UpdateBounds(Int32, Int32, Int32, Int32, Int32, Int32)" offset="125"/>
<frame value="  at Control.UpdateBounds(Int32, Int32, Int32, Int32)" method="Control.UpdateBounds(Int32, Int32, Int32, Int32)" offset="125"/>
<frame value="  at Control.SetBoundsCore(Int32, Int32, Int32, Int32, BoundsSpecified)" method="Control.SetBoundsCore(Int32, Int32, Int32, Int32, BoundsSpecified)" offset="134"/>
<frame value="  at Control.SetBounds(Int32, Int32, Int32, Int32, BoundsSpecified)" method="Control.SetBounds(Int32, Int32, Int32, Int32, BoundsSpecified)" offset="101"/>
<frame value="  at Control.set_Location(Point)" method="Control.set_Location(Point)" offset="28"/>
<frame value="  at Form1.InitializeComponent() in D:\WINDOWS 2012\BACK up 11\easy tranlate\easy translator\better gui\WindowsFormsApplication1\Form1.Designer.cs(51)" method="Form1.InitializeComponent()" offset="183" file="D:\WINDOWS 2012\BACK up 11\easy tranlate\easy translator\better gui\WindowsFormsApplication1\Form1.Designer.cs" line="51"><beforeSource><![CDATA[            // 
            // button1
            // ]]></beforeSource>
<source><![CDATA[            this.button1.Location = new System.Drawing.Point(547, 142);]]></source>
<afterSource><![CDATA[            this.button1.Name = "button1";
            this.button1.Size = new System.Drawing.Size(75, 32);
            this.button1.TabIndex = 0;]]></afterSource>
</frame>
<frame value="  at Form1..ctor() in D:\WINDOWS 2012\BACK up 11\easy tranlate\easy translator\better gui\WindowsFormsApplication1\Form1.cs(28)" method="Form1..ctor()" offset="27" file="D:\WINDOWS 2012\BACK up 11\easy tranlate\easy translator\better gui\WindowsFormsApplication1\Form1.cs" line="28"><beforeSource><![CDATA[
        public Form1()
        {]]></beforeSource>
<source><![CDATA[            InitializeComponent();]]></source>
<afterSource><![CDATA[        }

        //-----------------------------------------------------]]></afterSource>
</frame>
<frame value="  at Form1Factory.Create(AutoValidate, FormBorderStyle, DialogResult, Icon, Form, Boolean, Int32, Control, Point, ISite)" method="Form1Factory.Create(AutoValidate, FormBorderStyle, DialogResult, Icon, Form, Boolean, Int32, Control, Point, ISite)" offset="0"/>
<frame value="  at ThreadHelper.ThreadStart_Context(Object)" method="ThreadHelper.ThreadStart_Context(Object)" offset="59"/>
<frame value="  at ExecutionContext.RunInternal(ExecutionContext, ContextCallback, Object, Boolean)" method="ExecutionContext.RunInternal(ExecutionContext, ContextCallback, Object, Boolean)" offset="112"/>
<frame value="  at ExecutionContext.Run(ExecutionContext, ContextCallback, Object, Boolean)" method="ExecutionContext.Run(ExecutionContext, ContextCallback, Object, Boolean)" offset="9"/>
<frame value="  at ExecutionContext.Run(ExecutionContext, ContextCallback, Object)" method="ExecutionContext.Run(ExecutionContext, ContextCallback, Object)" offset="52"/>
<frame value="  at ThreadHelper.ThreadStart(Object)" method="ThreadHelper.ThreadStart(Object)" offset="50"/>
</stackTrace>
</staticFieldStore>
<staticFieldStore fieldDisplayName="Microsoft.Win32.SystemEvents.eventWindowReady" declaringTypeDisplayName="Microsoft.Win32.SystemEvents" fieldShortDisplayName="eventWindowReady" wikiTopic="Value Stored In Static Field"><field><definition assemblyName="System" name="eventWindowReady" static="true" token="4000d07"><declaringType assemblyName="System" name="SystemEvents" token="20002c1" namespace="Microsoft.Win32"/>
<fieldType spec="Class"><definition assemblyName="mscorlib" name="ManualResetEvent" token="20001b3" namespace="System.Threading"/>
</fieldType>
</definition>
</field>
<stackTrace><frame value="  at SystemEvents.EnsureSystemEvents(Boolean, Boolean)" method="SystemEvents.EnsureSystemEvents(Boolean, Boolean)" offset="134"/>
<frame value="  at SystemEvents.AddEventHandler(Object, Delegate)" method="SystemEvents.AddEventHandler(Object, Delegate)" offset="35"/>
<frame value="  at SystemEvents.add_UserPreferenceChanging(UserPreferenceChangingEventHandler)" method="SystemEvents.add_UserPreferenceChanging(UserPreferenceChangingEventHandler)" offset="6"/>
<frame value="  at KnownColorTable.InitColorTable()" method="KnownColorTable.InitColorTable()" offset="23"/>
<frame value="  at KnownColorTable.EnsureColorTable()" method="KnownColorTable.EnsureColorTable()" offset="7"/>
<frame value="  at KnownColorTable.KnownColorToArgb(KnownColor)" method="KnownColorTable.KnownColorToArgb(KnownColor)" offset="0"/>
<frame value="  at Color.get_Value()" method="Color.get_Value()" offset="35"/>
<frame value="  at Color.get_A()" method="Color.get_A()" offset="1"/>
<frame value="  at Control.get_RenderTransparent()" method="Control.get_RenderTransparent()" offset="22"/>
<frame value="  at Control.OnMove(EventArgs)" method="Control.OnMove(EventArgs)" offset="34"/>
<frame value="  at Control.OnLocationChanged(EventArgs)" method="Control.OnLocationChanged(EventArgs)" offset="6"/>
<frame value="  at Control.UpdateBounds(Int32, Int32, Int32, Int32, Int32, Int32)" method="Control.UpdateBounds(Int32, Int32, Int32, Int32, Int32, Int32)" offset="125"/>
<frame value="  at Control.UpdateBounds(Int32, Int32, Int32, Int32)" method="Control.UpdateBounds(Int32, Int32, Int32, Int32)" offset="125"/>
<frame value="  at Control.SetBoundsCore(Int32, Int32, Int32, Int32, BoundsSpecified)" method="Control.SetBoundsCore(Int32, Int32, Int32, Int32, BoundsSpecified)" offset="134"/>
<frame value="  at Control.SetBounds(Int32, Int32, Int32, Int32, BoundsSpecified)" method="Control.SetBounds(Int32, Int32, Int32, Int32, BoundsSpecified)" offset="101"/>
<frame value="  at Control.set_Location(Point)" method="Control.set_Location(Point)" offset="28"/>
<frame value="  at Form1.InitializeComponent() in D:\WINDOWS 2012\BACK up 11\easy tranlate\easy translator\better gui\WindowsFormsApplication1\Form1.Designer.cs(51)" method="Form1.InitializeComponent()" offset="183" file="D:\WINDOWS 2012\BACK up 11\easy tranlate\easy translator\better gui\WindowsFormsApplication1\Form1.Designer.cs" line="51"><beforeSource><![CDATA[            // 
            // button1
            // ]]></beforeSource>
<source><![CDATA[            this.button1.Location = new System.Drawing.Point(547, 142);]]></source>
<afterSource><![CDATA[            this.button1.Name = "button1";
            this.button1.Size = new System.Drawing.Size(75, 32);
            this.button1.TabIndex = 0;]]></afterSource>
</frame>
<frame value="  at Form1..ctor() in D:\WINDOWS 2012\BACK up 11\easy tranlate\easy translator\better gui\WindowsFormsApplication1\Form1.cs(28)" method="Form1..ctor()" offset="27" file="D:\WINDOWS 2012\BACK up 11\easy tranlate\easy translator\better gui\WindowsFormsApplication1\Form1.cs" line="28"><beforeSource><![CDATA[
        public Form1()
        {]]></beforeSource>
<source><![CDATA[            InitializeComponent();]]></source>
<afterSource><![CDATA[        }

        //-----------------------------------------------------]]></afterSource>
</frame>
<frame value="  at Form1Factory.Create(AutoValidate, FormBorderStyle, DialogResult, Icon, Form, Boolean, Int32, Control, Point, ISite)" method="Form1Factory.Create(AutoValidate, FormBorderStyle, DialogResult, Icon, Form, Boolean, Int32, Control, Point, ISite)" offset="0"/>
<frame value="  at ThreadHelper.ThreadStart_Context(Object)" method="ThreadHelper.ThreadStart_Context(Object)" offset="59"/>
<frame value="  at ExecutionContext.RunInternal(ExecutionContext, ContextCallback, Object, Boolean)" method="ExecutionContext.RunInternal(ExecutionContext, ContextCallback, Object, Boolean)" offset="112"/>
<frame value="  at ExecutionContext.Run(ExecutionContext, ContextCallback, Object, Boolean)" method="ExecutionContext.Run(ExecutionContext, ContextCallback, Object, Boolean)" offset="9"/>
<frame value="  at ExecutionContext.Run(ExecutionContext, ContextCallback, Object)" method="ExecutionContext.Run(ExecutionContext, ContextCallback, Object)" offset="52"/>
<frame value="  at ThreadHelper.ThreadStart(Object)" method="ThreadHelper.ThreadStart(Object)" offset="50"/>
</stackTrace>
</staticFieldStore>
<staticFieldStore fieldDisplayName="Microsoft.Win32.SystemEvents.systemEvents" declaringTypeDisplayName="Microsoft.Win32.SystemEvents" fieldShortDisplayName="systemEvents" wikiTopic="Value Stored In Static Field"><field><definition assemblyName="System" name="systemEvents" static="true" token="4000d05"><declaringType assemblyName="System" name="SystemEvents" token="20002c1" namespace="Microsoft.Win32"/>
<fieldType spec="Class"><definition assemblyName="System" name="SystemEvents" token="20002c1" namespace="Microsoft.Win32"/>
</fieldType>
</definition>
</field>
<stackTrace><frame value="  at SystemEvents.EnsureSystemEvents(Boolean, Boolean)" method="SystemEvents.EnsureSystemEvents(Boolean, Boolean)" offset="146"/>
<frame value="  at SystemEvents.AddEventHandler(Object, Delegate)" method="SystemEvents.AddEventHandler(Object, Delegate)" offset="35"/>
<frame value="  at SystemEvents.add_UserPreferenceChanging(UserPreferenceChangingEventHandler)" method="SystemEvents.add_UserPreferenceChanging(UserPreferenceChangingEventHandler)" offset="6"/>
<frame value="  at KnownColorTable.InitColorTable()" method="KnownColorTable.InitColorTable()" offset="23"/>
<frame value="  at KnownColorTable.EnsureColorTable()" method="KnownColorTable.EnsureColorTable()" offset="7"/>
<frame value="  at KnownColorTable.KnownColorToArgb(KnownColor)" method="KnownColorTable.KnownColorToArgb(KnownColor)" offset="0"/>
<frame value="  at Color.get_Value()" method="Color.get_Value()" offset="35"/>
<frame value="  at Color.get_A()" method="Color.get_A()" offset="1"/>
<frame value="  at Control.get_RenderTransparent()" method="Control.get_RenderTransparent()" offset="22"/>
<frame value="  at Control.OnMove(EventArgs)" method="Control.OnMove(EventArgs)" offset="34"/>
<frame value="  at Control.OnLocationChanged(EventArgs)" method="Control.OnLocationChanged(EventArgs)" offset="6"/>
<frame value="  at Control.UpdateBounds(Int32, Int32, Int32, Int32, Int32, Int32)" method="Control.UpdateBounds(Int32, Int32, Int32, Int32, Int32, Int32)" offset="125"/>
<frame value="  at Control.UpdateBounds(Int32, Int32, Int32, Int32)" method="Control.UpdateBounds(Int32, Int32, Int32, Int32)" offset="125"/>
<frame value="  at Control.SetBoundsCore(Int32, Int32, Int32, Int32, BoundsSpecified)" method="Control.SetBoundsCore(Int32, Int32, Int32, Int32, BoundsSpecified)" offset="134"/>
<frame value="  at Control.SetBounds(Int32, Int32, Int32, Int32, BoundsSpecified)" method="Control.SetBounds(Int32, Int32, Int32, Int32, BoundsSpecified)" offset="101"/>
<frame value="  at Control.set_Location(Point)" method="Control.set_Location(Point)" offset="28"/>
<frame value="  at Form1.InitializeComponent() in D:\WINDOWS 2012\BACK up 11\easy tranlate\easy translator\better gui\WindowsFormsApplication1\Form1.Designer.cs(51)" method="Form1.InitializeComponent()" offset="183" file="D:\WINDOWS 2012\BACK up 11\easy tranlate\easy translator\better gui\WindowsFormsApplication1\Form1.Designer.cs" line="51"><beforeSource><![CDATA[            // 
            // button1
            // ]]></beforeSource>
<source><![CDATA[            this.button1.Location = new System.Drawing.Point(547, 142);]]></source>
<afterSource><![CDATA[            this.button1.Name = "button1";
            this.button1.Size = new System.Drawing.Size(75, 32);
            this.button1.TabIndex = 0;]]></afterSource>
</frame>
<frame value="  at Form1..ctor() in D:\WINDOWS 2012\BACK up 11\easy tranlate\easy translator\better gui\WindowsFormsApplication1\Form1.cs(28)" method="Form1..ctor()" offset="27" file="D:\WINDOWS 2012\BACK up 11\easy tranlate\easy translator\better gui\WindowsFormsApplication1\Form1.cs" line="28"><beforeSource><![CDATA[
        public Form1()
        {]]></beforeSource>
<source><![CDATA[            InitializeComponent();]]></source>
<afterSource><![CDATA[        }

        //-----------------------------------------------------]]></afterSource>
</frame>
<frame value="  at Form1Factory.Create(AutoValidate, FormBorderStyle, DialogResult, Icon, Form, Boolean, Int32, Control, Point, ISite)" method="Form1Factory.Create(AutoValidate, FormBorderStyle, DialogResult, Icon, Form, Boolean, Int32, Control, Point, ISite)" offset="0"/>
<frame value="  at ThreadHelper.ThreadStart_Context(Object)" method="ThreadHelper.ThreadStart_Context(Object)" offset="59"/>
<frame value="  at ExecutionContext.RunInternal(ExecutionContext, ContextCallback, Object, Boolean)" method="ExecutionContext.RunInternal(ExecutionContext, ContextCallback, Object, Boolean)" offset="112"/>
<frame value="  at ExecutionContext.Run(ExecutionContext, ContextCallback, Object, Boolean)" method="ExecutionContext.Run(ExecutionContext, ContextCallback, Object, Boolean)" offset="9"/>
<frame value="  at ExecutionContext.Run(ExecutionContext, ContextCallback, Object)" method="ExecutionContext.Run(ExecutionContext, ContextCallback, Object)" offset="52"/>
<frame value="  at ThreadHelper.ThreadStart(Object)" method="ThreadHelper.ThreadStart(Object)" offset="50"/>
</stackTrace>
</staticFieldStore>
<staticFieldStore fieldDisplayName="Microsoft.Win32.SystemEvents.windowThread" declaringTypeDisplayName="Microsoft.Win32.SystemEvents" fieldShortDisplayName="windowThread" wikiTopic="Value Stored In Static Field"><field><definition assemblyName="System" name="windowThread" static="true" token="4000d06"><declaringType assemblyName="System" name="SystemEvents" token="20002c1" namespace="Microsoft.Win32"/>
<fieldType spec="Class"><definition assemblyName="mscorlib" name="Thread" token="20001c4" namespace="System.Threading"/>
</fieldType>
</definition>
</field>
<stackTrace><frame value="  at SystemEvents.EnsureSystemEvents(Boolean, Boolean)" method="SystemEvents.EnsureSystemEvents(Boolean, Boolean)" offset="176"/>
<frame value="  at SystemEvents.AddEventHandler(Object, Delegate)" method="SystemEvents.AddEventHandler(Object, Delegate)" offset="35"/>
<frame value="  at SystemEvents.add_UserPreferenceChanging(UserPreferenceChangingEventHandler)" method="SystemEvents.add_UserPreferenceChanging(UserPreferenceChangingEventHandler)" offset="6"/>
<frame value="  at KnownColorTable.InitColorTable()" method="KnownColorTable.InitColorTable()" offset="23"/>
<frame value="  at KnownColorTable.EnsureColorTable()" method="KnownColorTable.EnsureColorTable()" offset="7"/>
<frame value="  at KnownColorTable.KnownColorToArgb(KnownColor)" method="KnownColorTable.KnownColorToArgb(KnownColor)" offset="0"/>
<frame value="  at Color.get_Value()" method="Color.get_Value()" offset="35"/>
<frame value="  at Color.get_A()" method="Color.get_A()" offset="1"/>
<frame value="  at Control.get_RenderTransparent()" method="Control.get_RenderTransparent()" offset="22"/>
<frame value="  at Control.OnMove(EventArgs)" method="Control.OnMove(EventArgs)" offset="34"/>
<frame value="  at Control.OnLocationChanged(EventArgs)" method="Control.OnLocationChanged(EventArgs)" offset="6"/>
<frame value="  at Control.UpdateBounds(Int32, Int32, Int32, Int32, Int32, Int32)" method="Control.UpdateBounds(Int32, Int32, Int32, Int32, Int32, Int32)" offset="125"/>
<frame value="  at Control.UpdateBounds(Int32, Int32, Int32, Int32)" method="Control.UpdateBounds(Int32, Int32, Int32, Int32)" offset="125"/>
<frame value="  at Control.SetBoundsCore(Int32, Int32, Int32, Int32, BoundsSpecified)" method="Control.SetBoundsCore(Int32, Int32, Int32, Int32, BoundsSpecified)" offset="134"/>
<frame value="  at Control.SetBounds(Int32, Int32, Int32, Int32, BoundsSpecified)" method="Control.SetBounds(Int32, Int32, Int32, Int32, BoundsSpecified)" offset="101"/>
<frame value="  at Control.set_Location(Point)" method="Control.set_Location(Point)" offset="28"/>
<frame value="  at Form1.InitializeComponent() in D:\WINDOWS 2012\BACK up 11\easy tranlate\easy translator\better gui\WindowsFormsApplication1\Form1.Designer.cs(51)" method="Form1.InitializeComponent()" offset="183" file="D:\WINDOWS 2012\BACK up 11\easy tranlate\easy translator\better gui\WindowsFormsApplication1\Form1.Designer.cs" line="51"><beforeSource><![CDATA[            // 
            // button1
            // ]]></beforeSource>
<source><![CDATA[            this.button1.Location = new System.Drawing.Point(547, 142);]]></source>
<afterSource><![CDATA[            this.button1.Name = "button1";
            this.button1.Size = new System.Drawing.Size(75, 32);
            this.button1.TabIndex = 0;]]></afterSource>
</frame>
<frame value="  at Form1..ctor() in D:\WINDOWS 2012\BACK up 11\easy tranlate\easy translator\better gui\WindowsFormsApplication1\Form1.cs(28)" method="Form1..ctor()" offset="27" file="D:\WINDOWS 2012\BACK up 11\easy tranlate\easy translator\better gui\WindowsFormsApplication1\Form1.cs" line="28"><beforeSource><![CDATA[
        public Form1()
        {]]></beforeSource>
<source><![CDATA[            InitializeComponent();]]></source>
<afterSource><![CDATA[        }

        //-----------------------------------------------------]]></afterSource>
</frame>
<frame value="  at Form1Factory.Create(AutoValidate, FormBorderStyle, DialogResult, Icon, Form, Boolean, Int32, Control, Point, ISite)" method="Form1Factory.Create(AutoValidate, FormBorderStyle, DialogResult, Icon, Form, Boolean, Int32, Control, Point, ISite)" offset="0"/>
<frame value="  at ThreadHelper.ThreadStart_Context(Object)" method="ThreadHelper.ThreadStart_Context(Object)" offset="59"/>
<frame value="  at ExecutionContext.RunInternal(ExecutionContext, ContextCallback, Object, Boolean)" method="ExecutionContext.RunInternal(ExecutionContext, ContextCallback, Object, Boolean)" offset="112"/>
<frame value="  at ExecutionContext.Run(ExecutionContext, ContextCallback, Object, Boolean)" method="ExecutionContext.Run(ExecutionContext, ContextCallback, Object, Boolean)" offset="9"/>
<frame value="  at ExecutionContext.Run(ExecutionContext, ContextCallback, Object)" method="ExecutionContext.Run(ExecutionContext, ContextCallback, Object)" offset="52"/>
<frame value="  at ThreadHelper.ThreadStart(Object)" method="ThreadHelper.ThreadStart(Object)" offset="50"/>
</stackTrace>
</staticFieldStore>
<staticFieldStore fieldDisplayName="Microsoft.Win32.SystemEvents.startupRecreates" declaringTypeDisplayName="Microsoft.Win32.SystemEvents" fieldShortDisplayName="startupRecreates" wikiTopic="Value Stored In Static Field"><field><definition assemblyName="System" name="startupRecreates" static="true" token="4000d09"><declaringType assemblyName="System" name="SystemEvents" token="20002c1" namespace="Microsoft.Win32"/>
<fieldType spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Boolean" token="200009e" namespace="System"/>
</fieldType>
</definition>
</field>
<stackTrace><frame value="  at SystemEvents.EnsureSystemEvents(Boolean, Boolean)" method="SystemEvents.EnsureSystemEvents(Boolean, Boolean)" offset="284"/>
<frame value="  at SystemEvents.AddEventHandler(Object, Delegate)" method="SystemEvents.AddEventHandler(Object, Delegate)" offset="35"/>
<frame value="  at SystemEvents.add_UserPreferenceChanging(UserPreferenceChangingEventHandler)" method="SystemEvents.add_UserPreferenceChanging(UserPreferenceChangingEventHandler)" offset="6"/>
<frame value="  at KnownColorTable.InitColorTable()" method="KnownColorTable.InitColorTable()" offset="23"/>
<frame value="  at KnownColorTable.EnsureColorTable()" method="KnownColorTable.EnsureColorTable()" offset="7"/>
<frame value="  at KnownColorTable.KnownColorToArgb(KnownColor)" method="KnownColorTable.KnownColorToArgb(KnownColor)" offset="0"/>
<frame value="  at Color.get_Value()" method="Color.get_Value()" offset="35"/>
<frame value="  at Color.get_A()" method="Color.get_A()" offset="1"/>
<frame value="  at Control.get_RenderTransparent()" method="Control.get_RenderTransparent()" offset="22"/>
<frame value="  at Control.OnMove(EventArgs)" method="Control.OnMove(EventArgs)" offset="34"/>
<frame value="  at Control.OnLocationChanged(EventArgs)" method="Control.OnLocationChanged(EventArgs)" offset="6"/>
<frame value="  at Control.UpdateBounds(Int32, Int32, Int32, Int32, Int32, Int32)" method="Control.UpdateBounds(Int32, Int32, Int32, Int32, Int32, Int32)" offset="125"/>
<frame value="  at Control.UpdateBounds(Int32, Int32, Int32, Int32)" method="Control.UpdateBounds(Int32, Int32, Int32, Int32)" offset="125"/>
<frame value="  at Control.SetBoundsCore(Int32, Int32, Int32, Int32, BoundsSpecified)" method="Control.SetBoundsCore(Int32, Int32, Int32, Int32, BoundsSpecified)" offset="134"/>
<frame value="  at Control.SetBounds(Int32, Int32, Int32, Int32, BoundsSpecified)" method="Control.SetBounds(Int32, Int32, Int32, Int32, BoundsSpecified)" offset="101"/>
<frame value="  at Control.set_Location(Point)" method="Control.set_Location(Point)" offset="28"/>
<frame value="  at Form1.InitializeComponent() in D:\WINDOWS 2012\BACK up 11\easy tranlate\easy translator\better gui\WindowsFormsApplication1\Form1.Designer.cs(51)" method="Form1.InitializeComponent()" offset="183" file="D:\WINDOWS 2012\BACK up 11\easy tranlate\easy translator\better gui\WindowsFormsApplication1\Form1.Designer.cs" line="51"><beforeSource><![CDATA[            // 
            // button1
            // ]]></beforeSource>
<source><![CDATA[            this.button1.Location = new System.Drawing.Point(547, 142);]]></source>
<afterSource><![CDATA[            this.button1.Name = "button1";
            this.button1.Size = new System.Drawing.Size(75, 32);
            this.button1.TabIndex = 0;]]></afterSource>
</frame>
<frame value="  at Form1..ctor() in D:\WINDOWS 2012\BACK up 11\easy tranlate\easy translator\better gui\WindowsFormsApplication1\Form1.cs(28)" method="Form1..ctor()" offset="27" file="D:\WINDOWS 2012\BACK up 11\easy tranlate\easy translator\better gui\WindowsFormsApplication1\Form1.cs" line="28"><beforeSource><![CDATA[
        public Form1()
        {]]></beforeSource>
<source><![CDATA[            InitializeComponent();]]></source>
<afterSource><![CDATA[        }

        //-----------------------------------------------------]]></afterSource>
</frame>
<frame value="  at Form1Factory.Create(AutoValidate, FormBorderStyle, DialogResult, Icon, Form, Boolean, Int32, Control, Point, ISite)" method="Form1Factory.Create(AutoValidate, FormBorderStyle, DialogResult, Icon, Form, Boolean, Int32, Control, Point, ISite)" offset="0"/>
<frame value="  at ThreadHelper.ThreadStart_Context(Object)" method="ThreadHelper.ThreadStart_Context(Object)" offset="59"/>
<frame value="  at ExecutionContext.RunInternal(ExecutionContext, ContextCallback, Object, Boolean)" method="ExecutionContext.RunInternal(ExecutionContext, ContextCallback, Object, Boolean)" offset="112"/>
<frame value="  at ExecutionContext.Run(ExecutionContext, ContextCallback, Object, Boolean)" method="ExecutionContext.Run(ExecutionContext, ContextCallback, Object, Boolean)" offset="9"/>
<frame value="  at ExecutionContext.Run(ExecutionContext, ContextCallback, Object)" method="ExecutionContext.Run(ExecutionContext, ContextCallback, Object)" offset="52"/>
<frame value="  at ThreadHelper.ThreadStart(Object)" method="ThreadHelper.ThreadStart(Object)" offset="50"/>
</stackTrace>
</staticFieldStore>
<uninstrumented extern="true" methodDisplayName="System.Int32 System.Drawing.SafeNativeMethods.GetSysColor(System.Int32 nIndex)" declaringTypeDisplayName="System.Drawing.SafeNativeMethods" methodShortDisplayName="SafeNativeMethods.GetSysColor(Int32)" wikiTopic="External Method Called"/>
<staticFieldStore fieldDisplayName="System.Drawing.KnownColorTable.colorTable" declaringTypeDisplayName="System.Drawing.KnownColorTable" fieldShortDisplayName="colorTable" wikiTopic="Value Stored In Static Field"><field><definition assemblyName="System.Drawing" name="colorTable" static="true" token="4000a58"><declaringType assemblyName="System.Drawing" name="KnownColorTable" token="20000f7" namespace="System.Drawing"/>
<fieldType spec="SzArray"><elementType spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Int32" token="20000f3" namespace="System"/>
</elementType>
</fieldType>
</definition>
</field>
<stackTrace><frame value="  at KnownColorTable.InitColorTable()" method="KnownColorTable.InitColorTable()" offset="1414"/>
<frame value="  at KnownColorTable.EnsureColorTable()" method="KnownColorTable.EnsureColorTable()" offset="7"/>
<frame value="  at KnownColorTable.KnownColorToArgb(KnownColor)" method="KnownColorTable.KnownColorToArgb(KnownColor)" offset="0"/>
<frame value="  at Color.get_Value()" method="Color.get_Value()" offset="35"/>
<frame value="  at Color.get_A()" method="Color.get_A()" offset="1"/>
<frame value="  at Control.get_RenderTransparent()" method="Control.get_RenderTransparent()" offset="22"/>
<frame value="  at Control.OnMove(EventArgs)" method="Control.OnMove(EventArgs)" offset="34"/>
<frame value="  at Control.OnLocationChanged(EventArgs)" method="Control.OnLocationChanged(EventArgs)" offset="6"/>
<frame value="  at Control.UpdateBounds(Int32, Int32, Int32, Int32, Int32, Int32)" method="Control.UpdateBounds(Int32, Int32, Int32, Int32, Int32, Int32)" offset="125"/>
<frame value="  at Control.UpdateBounds(Int32, Int32, Int32, Int32)" method="Control.UpdateBounds(Int32, Int32, Int32, Int32)" offset="125"/>
<frame value="  at Control.SetBoundsCore(Int32, Int32, Int32, Int32, BoundsSpecified)" method="Control.SetBoundsCore(Int32, Int32, Int32, Int32, BoundsSpecified)" offset="134"/>
<frame value="  at Control.SetBounds(Int32, Int32, Int32, Int32, BoundsSpecified)" method="Control.SetBounds(Int32, Int32, Int32, Int32, BoundsSpecified)" offset="101"/>
<frame value="  at Control.set_Location(Point)" method="Control.set_Location(Point)" offset="28"/>
<frame value="  at Form1.InitializeComponent() in D:\WINDOWS 2012\BACK up 11\easy tranlate\easy translator\better gui\WindowsFormsApplication1\Form1.Designer.cs(51)" method="Form1.InitializeComponent()" offset="183" file="D:\WINDOWS 2012\BACK up 11\easy tranlate\easy translator\better gui\WindowsFormsApplication1\Form1.Designer.cs" line="51"><beforeSource><![CDATA[            // 
            // button1
            // ]]></beforeSource>
<source><![CDATA[            this.button1.Location = new System.Drawing.Point(547, 142);]]></source>
<afterSource><![CDATA[            this.button1.Name = "button1";
            this.button1.Size = new System.Drawing.Size(75, 32);
            this.button1.TabIndex = 0;]]></afterSource>
</frame>
<frame value="  at Form1..ctor() in D:\WINDOWS 2012\BACK up 11\easy tranlate\easy translator\better gui\WindowsFormsApplication1\Form1.cs(28)" method="Form1..ctor()" offset="27" file="D:\WINDOWS 2012\BACK up 11\easy tranlate\easy translator\better gui\WindowsFormsApplication1\Form1.cs" line="28"><beforeSource><![CDATA[
        public Form1()
        {]]></beforeSource>
<source><![CDATA[            InitializeComponent();]]></source>
<afterSource><![CDATA[        }

        //-----------------------------------------------------]]></afterSource>
</frame>
<frame value="  at Form1Factory.Create(AutoValidate, FormBorderStyle, DialogResult, Icon, Form, Boolean, Int32, Control, Point, ISite)" method="Form1Factory.Create(AutoValidate, FormBorderStyle, DialogResult, Icon, Form, Boolean, Int32, Control, Point, ISite)" offset="0"/>
<frame value="  at ThreadHelper.ThreadStart_Context(Object)" method="ThreadHelper.ThreadStart_Context(Object)" offset="59"/>
<frame value="  at ExecutionContext.RunInternal(ExecutionContext, ContextCallback, Object, Boolean)" method="ExecutionContext.RunInternal(ExecutionContext, ContextCallback, Object, Boolean)" offset="112"/>
<frame value="  at ExecutionContext.Run(ExecutionContext, ContextCallback, Object, Boolean)" method="ExecutionContext.Run(ExecutionContext, ContextCallback, Object, Boolean)" offset="9"/>
<frame value="  at ExecutionContext.Run(ExecutionContext, ContextCallback, Object)" method="ExecutionContext.Run(ExecutionContext, ContextCallback, Object)" offset="52"/>
<frame value="  at ThreadHelper.ThreadStart(Object)" method="ThreadHelper.ThreadStart(Object)" offset="50"/>
</stackTrace>
</staticFieldStore>
<uninstrumented extern="true" methodDisplayName="System.Int32 System.Drawing.SafeNativeMethods+Gdip.GdipCreateFontFamilyFromName(System.String name, System.Runtime.InteropServices.HandleRef fontCollection, System.IntPtr&amp; FontFamily)" declaringTypeDisplayName="System.Drawing.SafeNativeMethods+Gdip" methodShortDisplayName="Gdip.GdipCreateFontFamilyFromName(String, HandleRef, IntPtr&amp;)" wikiTopic="External Method Called"/>
<uninstrumented extern="true" methodDisplayName="System.Int32 System.Windows.Forms.SafeNativeMethods.GetCurrentThreadId()" declaringTypeDisplayName="System.Windows.Forms.SafeNativeMethods" methodShortDisplayName="SafeNativeMethods.GetCurrentThreadId()" wikiTopic="External Method Called"/>
<boundary kind="maxbranches" value="10000" message="maximum number of branches exceeded"/>
<log level="message" time="2014-11-27 15:56:59Z" category="execution" message="Please notice: A branch in the method System.Windows.Forms.PropertyStore.SplitKey was executed 526 times; please check that the code is not stuck in an infinite loop."/>
<generatedTest id="f8901e05-24db-4ffa-944d-5d6644f7826f" index="1" run="2" status="pathboundsexceeded" explorationIsDynamicCode="true" boundaryDetails="Please notice: A branch in the method System.Windows.Forms.PropertyStore.SplitKey was executed 526 times; please check that the code is not stuck in an infinite loop." generated="true" new="true" assemblyName="WindowsFormsApplication1.Tests" name="Form1_Load01"/>
<log level="message" time="2014-11-27 15:57:00Z" category="coverage" message="coverage increased from 0 to 161 blocks (+161) after flipping &lt;unknown method&gt; at 0x&lt;unknown offset&gt;"/>
<coverage domain="usercodeundertest" unit="block" covered="161" total="199" coveredRatio="0.80904522613065322"/>
<sourceCoverage xml="cov\e294\cov.xml" html="cov\e294\cov.html"/>
<explorable title="could not create an instance of WindowsFormsApplication1.Form1" kind="unexplorableclass" isExplorableTypeExported="true"><explorableType spec="Class"><definition assemblyName="WindowsFormsApplication1" name="Form1" token="2000004" namespace="WindowsFormsApplication1"/>
</explorableType>
<testAssemblyName name="WindowsFormsApplication1.Tests"/>
</explorable>
<result name="Form1_Load(Form1, Object, EventArgs)" state="success" duration="26.2808088039122"/>
<duration start="2014-11-27 15:56:34Z" end="2014-11-27 15:57:01Z" seconds="26.4766731"/>
</exploration>
<coverage domain="usercodeundertest" unit="block" covered="161" total="199" coveredRatio="0.80904522613065322"/>
<sourceCoverage xml="cov\t575\cov.xml" html="cov\t575\cov.html"/>
<duration start="2014-11-27 15:56:33Z" end="2014-11-27 15:57:01Z" seconds="27.3658747"/>
</fixture>
<coverage domain="usercodeundertest" unit="block" covered="161" total="199" coveredRatio="0.80904522613065322"/>
<sourceCoverage xml="cov\a59942837\cov.xml" html="cov\a59942837\cov.html"/>
<duration start="2014-11-27 15:56:33Z" end="2014-11-27 15:57:01Z" seconds="28.2238762"/>
</assembly>
<duration start="2014-11-27 15:56:28Z" end="2014-11-27 15:57:01Z" seconds="33.3224859"/>
<background/>
</pex>
